types InvictusGuiTypes
{

	type cpt_button = margin_widget {
		block "Size" { size = { 100 150 } }

		allow_outside = yes

		vbox = {
			position = { -14 0 }
			margin_top = 1
			margin_bottom = 1
			widgetanchor = hcenter
			#parentanchor = right

			block "stats"
			{
				visible = no
			}

			icon = {
				layoutpolicy_vertical = expanding
				layoutpolicy_horizontal = fixed
				texture = "gfx/bgs/color_stats_tall.dds"
				size = { 25 0 }

				background = {
					name = "HighlightShadow"
					texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
					shaderfile = "gfx/FX/pdxgui_default.shader"
					spriteType = corneredtiled
					spriteborder = { 8 8 }
					margin = { 4 4 }
					alpha = 0.5
					size = { 100% 100% }
					color = { 1 1 0 1 }
				}

				vbox = {
					position = { 0 -2 }
					#parentanchor = hcenter
					visible = "[Character.IsValid]"

					textbox = {
						#parentanchor = hcenter
						using = BaseFontS
						block "fontsize" {
							fontsize = 16
						}
						using = Black_FontColor
						autoresize = yes
						text = "[Character.GetMartial]"
						tooltip = "[Character.GetMartialToolTip]"
					}

					textbox = {
						#parentanchor = hcenter
						using = BaseFontS
						block "fontsize" {
							fontsize = 16
						}
						using = Black_FontColor
						autoresize = yes
						text = "[Character.GetFinesse]"
						tooltip = "[Character.GetFinesseToolTip]"
					}

					textbox = {
						#parentanchor = hcenter
						using = BaseFontS
						block "fontsize" {
							fontsize = 16
						}
						using = Black_FontColor
						autoresize = yes
						text = "[Character.GetCharisma]"
						tooltip = "[Character.GetCharismaToolTip]"
					}

					textbox = {
						#parentanchor = hcenter
						using = BaseFontS
						block "fontsize" {
							fontsize = 16
						}
						using = Black_FontColor
						autoresize = yes
						text = "[Character.GetZeal]"
						tooltip = "[Character.GetZealToolTip]"
					}
				}
			}
		}

		widget = {
			size = { 100% 100% }
			background = {
				name = "Shadow"
				texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
				shaderfile = "gfx/FX/pdxgui_default.shader"
				spriteType = corneredtiled
				spriteborder = { 8 8 }
				margin_left = 4
				margin_bottom = 4
				alpha = 0.5
				size = { 100% 100% }

				block "Drop_shadow"
				{
					# If this is not a button/unclickable, set this visible to no.
					visible = yes
				}
			}
		}

		background = {
			name = "HighlightShadow"
			texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			spriteType = corneredtiled
			spriteborder = { 8 8 }
			margin = { 5 5 }
			alpha = 0.5
			size = { 100% 100% }
			color = { 1 1 0 1 }
			block "HighlightShadow"
			{
				# If this is not a button/unclickable, set this visible to no.
				visible = no
			}
		}

		icon = {
			name= "Base"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			using = flat_background_white
			spriteType = Corneredtiled
			size = { 100% 100% }
		}

		icon = {
			name = "Button_Outline"
			using = button_tiled_texture
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			size = { 100% 100% }
			framesize = { 200 200 }
		}

		block "Context" {} #this is inherited, you don't need to use the blockoverride

		margin_widget = {
			size = { 100% 100% }
			block "Margin" { margin = { 3 3 } }
			visible = "[Character.IsValid]"

			portrait_button = {
				using = pt_button
				parentanchor = top
				position = { 0 0 }
				using = tooltip_es_portrait
				pop_out = no
				block "Background" {
					 background_texture = "[GetCharacterBackgroundIcon( Character.Self, Character.GetLocation.GetTerrain )]"
				}
				block "BackgroundTint" { texture = "[GetCharacterBackgroundIconTint( Character.Self, Character.GetLocation.GetTerrain )]" }
				block "PortraitTexture" { portrait_texture = "[Character.GetPortrait('default', 'default')]" }

			}

			margin_widget = {
			    size = { 100% 100% }
			    scissor = yes
			    margin_top = -2

			    textbox = {
			        text = "[Character.Custom('character_bg')]"
					size = { 100% 100% }
			    }
				icon = {
					size = { 100% 100% }
					texture = "[GetCharacterBackgroundIconTint( Character.Self, Character.GetLocation.GetTerrain )]"
				}
			}

			portrait_button = {
			    using = pt_button
			    parentanchor = top
			    using = tooltip_es_portrait
			    pop_out = no
			    block "Background" {
			        background_texture = "gfx/interface/transparent.dds"
			    }
			    block "BackgroundTint" { texture = "[GetCharacterBackgroundIconTint( Character.Self, Character.GetLocation.GetTerrain )]" }
			    block "PortraitTexture" { portrait_texture = "[Character.GetPortrait('default', 'default')]" }
			}
		}
		margin_widget = {
			size = { 100% 100% }
			visible = "[Not( Character.IsValid )]" 
			#margin = { 3 3 }
			background = {
				shaderfile = "gfx/FX/pdxgui_default.shader"
				texture = "gfx/interface/base_parts/background_noninteractable_texture.dds"
				spriteType = Corneredtiled

				#modify_texture = {
				#	name = "Alpha"
				#	texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
				#	blend_mode = alphamultiply
				#	spriteType = Corneredtiled
				#	spriteborder = { 60 60 }
				#}
			}
			margin_widget = {
				size = { 100% 100% }
				margin = { 4 4 }
				background = {
					shaderfile = "gfx/FX/pdxgui_default.shader"
					using = flat_background_white
					spriteType = Corneredtiled
					alpha = 0.7

					modify_texture = {
						name = "Alpha"
						texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
						blend_mode = alphamultiply
						spriteType = Corneredtiled
						spriteborder = { 60 60 }
					}
				}
				icon = {
					name = "beige_not_clickable_portrait"
					size = { 80% 50% }
					using = beige_background
					parentanchor = center
					maximumsize = { 50 50 }
					
					modify_texture = {
							texture = "gfx/interface/base_parts/idea_mark.dds"
							blend_mode = alphamultiply
					} 
				}
			}		
		}
		icon = { #family color
			texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
			size = { 45% 32% }
			position = { -2 2 }
			color = "[Character.GetFamily.GetBackgroundColor]"
			visible = "[And( And( Character.IsValid, Not( Character.GetFamily.IsMinor )), Not( Character.IsHeadOfFamily ) )]"
			alpha = 0.8
			parentanchor = top|right
			datacontext = "[Character]"
			tooltip = "MEMBER_OF_FAMILY_PORTRAIT_TOOLTIP"
			alwaystransparent = yes
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/solid_stripe_top_corner.dds"
				blend_mode = alphamultiply
			}
			icon = {
				size = { 100% 100% }
				texture = "gfx/interface/base_parts/button_allframes.dds"
				framesize = { 100 100 }
				frame = 3
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/sidegradient.dds"
					blend_mode = alphamultiply
				}
			}
		}

		icon = { #head of family
			texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
			size = { 95% 32% }
			position = { 0 3 }
			color = "[Character.GetFamily.GetBackgroundColor]"
			visible = "[And( Character.IsValid, Character.IsHeadOfFamily )]"
			alpha = 0.83
			parentanchor = top|hcenter
			datacontext = "[Character]"
			tooltip = "HEAD_OF_FAMILY_PORTRAIT_TOOLTIP"
			alwaystransparent = yes

			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/solid_family_stripe.dds"
				blend_mode = alphamultiply
			}
			icon = {
				size = { 100% 100% }
				texture = "gfx/interface/base_parts/button_allframes.dds"
				framesize = { 100 100 }
				frame = 3
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/sidegradientfamilythicker.dds"
					blend_mode = alphamultiply
				}
			}
		}

		widget = {
			name = "party_icon_widget"
			size = { 39% 26% }
			parentanchor = bottom|left
			position = { 0 -5 }
			maximumsize = { 40 40 }
			icon = {
				name = "party_icon_background"
				size = { 100% 100% }
				position = { 3 -3 }
				tooltip = "CHARACTER_FACTION"
				texture = "gfx/interface/base_parts/left_stripe_bottom_corner.dds"
				alpha = 0.8
				visible = "[Character.ShowParty]"
			}
			block "ShowIcons" {}
		}

		widget = {
			name = "player_overlay_widget"
			size = { 39% 26% }
			maximumsize = { 40 40 }
			parentanchor = bottom|hcenter
			icon = {
				size = { 100% 100% }
				name = "player_overlay"
				alwaystransparent = yes
				texture = gfx/portraits/portrait_player_glow.dds
				visible = "[Character.IsOtherPlayerRuler]"
			}
			block "ShowIcons" {}
		}

		widget = {
			name = "ruler_icon_widget"
			size = { 39% 26% }
			maximumsize = { 40 40 }
			parentanchor = bottom|right
			icon = {
				name = "ruler_icon"
				size = { 100% 100% }
				using = icon_leader
				datacontext = "[Character]"
				tooltip = OUR_RULER_AS_PLAYER
				visible = "[Character.IsLocalPlayerRuler]"
			}
			block "ShowIcons" {}
		}

		widget = { # loyalty
			size = { 100% 4 }
			parentanchor = bottom
			visible = "[And(And(Character.IsValid, And( Character.IsAlive, GreaterThan_int32(Character.GetAge, '(int32)15'))), Not(Character.IsRuler))]"
			tooltip = "[Character.GetLoyaltyToolTip]"

			icon = {
				using = flat_background_black
				size = { 100% 3 }
				position = { 0 -5 }
				alpha = 0.5
			}

			fixed_size_progressbar = {
				block "loyalty" {
					visible = "[LessThanOrEqualTo_CFixedPoint(Character.GetLoyalty, '(CFixedPoint)33')]"
				}
				blockoverride "size" { size = { 100% 4 } }
				blockoverride "Value" {
					value = "[FixedPointToFloat(Character.GetLoyalty)]"
				}
				parentanchor = bottom
				position = { 0 -3 }
				blockoverride "ProgressAlpha" {
					minimumsize = { 0 0 }
					alpha = 0.9
				}
				blockoverride "dots" { visible = no }
				blockoverride "margin" { margin = { 3 0 } }
				blockoverride "progresstexture" { progresstexture = "gfx/interface/base_parts/white_button_color_200fs.dds"}
				blockoverride "progresscolor" { color = { 1 0.6 0.5 1 } }
			}

			fixed_size_progressbar = {
				block "loyalty" {
					visible = "[And(LessThan_CFixedPoint(Character.GetLoyalty, '(CFixedPoint)66'), GreaterThan_CFixedPoint(Character.GetLoyalty, '(CFixedPoint)33') )]"
				}
				blockoverride "size" { size = { 100% 4 } }
				blockoverride "Value" {
					value = "[FixedPointToFloat(Character.GetLoyalty)]"
				}
				parentanchor = bottom
				position = { 0 -3 }
				blockoverride "ProgressAlpha" {
					minimumsize = { 0 0 }
					alpha = 0.9
				}
				blockoverride "dots" { visible = no }
				blockoverride "margin" { margin = { 3 0 } }
				blockoverride "progresstexture" { progresstexture = "gfx/interface/base_parts/white_button_color_200fs.dds"}
				blockoverride "progresscolor" { color = { 0.95 0.8 0.6 1 } }
			}

			fixed_size_progressbar = {
				block "loyalty" {
					visible = "[GreaterThanOrEqualTo_CFixedPoint(Character.GetLoyalty, '(CFixedPoint)66')]"
				}
				blockoverride "size" { size = { 100% 4 } }
				blockoverride "Value" {
					value = "[FixedPointToFloat(Character.GetLoyalty)]"
				 }
				parentanchor = bottom
				position = { 0 -3 }
				blockoverride "ProgressAlpha" {
					minimumsize = { 0 0 }
					alpha = 0.9
				}
				blockoverride "dots" { visible = no }
				blockoverride "margin" { margin = { 3 0 } }
				blockoverride "progresstexture" { progresstexture = "gfx/interface/base_parts/white_button_color_200fs.dds"}
				blockoverride "progresscolor" { color = { 0.85 0.93 0.5 1 } }
			}
		}

		widget = {
			size = { 39% 26% }
			parentanchor = bottom|left
			position = { 0 -5 }
			maximumsize = { 40 40 }
			icon = {
				name = "party_icon"
				size = { 100% 100% }
				position = { 2 0 }
				tooltip = "CHARACTER_FACTION"
				texture = "[GetPartyIcon(Character.GetParty)]"
				visible = "[Character.ShowParty]"

				glow = {
					glow_radius = 2
					color = { 1 1 1 0.7 }
				}
			}
			block "ShowIcons" {}
		}
	}
	
	type cpt_button_large = margin_widget {
		block "Size" { size = { 604 256 } }

		block "Context" {} #this is inherited, you don't need to use the blockoverride

		icon = {
			name = "background"
			texture = "[GetCharacterBackgroundIconHuge( Character.Self, Character.GetLocation.GetTerrain )]"
			spriteType = Corneredtiled
			#parentanchor = bottom
			size = { 100% 100% }
			modify_texture = {
				name = "Alpha"
				block "AlphaTexture" { texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds" }
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 4 4 }
			}

			icon = {
				block "BackgroundTint" { texture = "[GetCharacterBackgroundIconTint( Character.Self, Character.GetLocation.GetTerrain )]" }
				size = { 100% 100% }
			}
		}


		# HUGE Custom Character Backgrounds
		# huge background for Babylon
		#icon = {
		#	texture = "gfx/interface/portrait/background_ruler_monarchy_babylon_huge.dds"
		#	spriteType = Corneredtiled
		#	size = { 100% 100% }
		#	modify_texture = {
		#		name = "Alpha"
		#		block "AlphaTexture" { texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds" }
		#		blend_mode = alphamultiply
		#		spriteType = Corneredtiled
		#		spriteborder = { 4 4 }
		#	}
		#	visible = "[And( EqualTo_int32(Character.GetLocation.GetId, '(int32)918'), Character.IsAlive)]"
		#}
		scissor = yes

		margin_widget = {
			block "BottomPortraitSize" { size = { 200 300 } }
			block "Margin" { margin = { 3 3 } }
			visible = "[And( Character.IsValid, GreaterThan_int32( Character.GetAge, '(int32)4' ))]"
			parentanchor = bottom
			block "BottomPortraitPosition" { position = { -10 24 } }
			portrait_button = {
				using = pt_button_large
				pop_out = yes
			}
		}

		margin_widget = {
			block "BottomPortraitSize" { size = { 150 225 } }
			block "Margin" { margin = { 3 3 } }
			visible = "[And( Character.IsValid, LessThanOrEqualTo_int32( Character.GetAge, '(int32)4' ))]"
			parentanchor = bottom
			block "BottomPortraitPosition" {  }
			position = { 36 18 }
			portrait_button = {
				using = pt_button_baby
			}
		}



		margin_widget = {
			block "BottomPortraitSize" { size = { 100% 100% } }
			margin = { 3 3 }
			visible = "[Not( Character.IsValid )]"

			icon = {
				texture = "gfx/interface/portrait/background_imprisoned_normal_tint.dds"
				size = { 100% 100% }
				icon = {
					texture = "gfx/interface/base_parts/idea_mark.dds"
					parentanchor = center
				}
			}

		}

		widget = {
			parentanchor = bottom|hcenter
			size = { 100% 24 }
			block "ShowIcons" {}
			hbox = {
				position = { -1 -2 }
				alwaystransparent = no
				ignoreinvisible = no
				widget = {
					size = { 24 26 }
					icon = {
						size = { 30 30 }
						parentanchor = vcenter
						tooltip = "CHARACTER_FACTION"
						texture = "[GetPartyIcon(Character.GetParty)]"
					}
					visible = "[Character.ShowParty]"
				}
				widget = {
					size = { 24 26 }

					icon = {
						name = "player_overlay"
						size = { 26 26 }
						alwaystransparent = yes
						texture = gfx/portraits/portrait_player_glow.dds
						position = { 3 0 }
						parentanchor = vcenter
						visible = "[Character.IsOtherPlayerRuler]"
					}

				}
				widget = {
					size = { 24 26 }
					icon = {
						size = { 30 30 }
						using = icon_leader
						datacontext = "[Character]"
						tooltip = OUR_RULER_AS_PLAYER
						visible = "[Character.IsLocalPlayerRuler]"
						parentanchor = vcenter
					}
				}
			}
		}
	}

	type charpt_button_large_with_data = cpt_button_large { #cpt_button_large is directly above this
		cpt_button_large = {
			margin_widget = {
				size = { 100% 100% }
				block "ContentMargins" {}
				country_flag_reworked = {
					position = { -1 -1 }
					blockoverride "Size"
					{
						size = { 58 58 }
					}
					blockoverride "Flag"
					{
						texture = "[Character.GetEmployer.AccessCoatOfArms.GetTexture('(int32)120', '(int32)120')]"
						frame = "[Character.GetEmployer.AccessCoatOfArms.GetFrame('(int32)120', '(int32)120'))]"
						framesize = { 120 120 }
					}
					blockoverride "On_click"
					{
						onclick = "[OpenDiplomacy(CharacterWindow.GetCharacter.GetEmployer)]"
					}
					tooltip = "[Character.GetEmployer.GetDescriptiveName]"
				}

				icon = {
					texture = "gfx/interface/icons/shared_icons/leader_pretender.dds"
					size = { 50 50 }
					position = { 74 3 }
					visible = "[And( Character.GetEmployer.GetGovernment.IsMonarchy, Character.IsPretender )]"
					tooltip = "PRETENDER_TOOLTIP"
				}

				flowcontainer = {
					parentanchor = top|right
					widgetanchor = right
					spacing = 11
					position = { -2 2 }
					margin_top = 2
					margin_right = 2
					@character_stats_bg_alpha = 0.65

					flowcontainer = {
						spacing = 2
						direction = vertical
						background = {
							shaderfile = "gfx/FX/pdxgui_default.shader"
							using = flat_background_white
							using = border_medium_torn_alpha
							alpha = @character_stats_bg_alpha
							margin = { 8 8 }
							margin_bottom = 12
						}
						ignoreinvisible = yes
						#using = NoninteractableBG
						#blockoverride "BackAlpha" { alpha = @character_stats_bg_alpha }
						minimumsize = { 136 0 }
						flowcontainer = {
							spacing = 6
							ignoreinvisible = yes
							icon = {
								texture = "gfx/interface/icons/icon_alpha/male_female_frame.dds"
								framesize = { 33 33 }
								position = { -4 0 }
								size = { 23 23 }
								frame = "[Character.GetGenderFrame]"
								parentanchor = left|vcenter
							}
							tag_dark = {
								minimumsize = { 174 34 }
								text = "[Character.GetNameWithNoTooltip]"
								fontsize_min = 10
								max_width = 174
								elide = right
							}
							icon = {
								texture = "gfx/interface/base_parts/plus.dds"
								size = { 26 26 }
								visible = "[Not( StringIsEmpty( Character.GetRelevantDescription ) )]"
								tooltip = "[Character.GetRelevantDescription]"
							}
						}
						tag_dark = {
							minimumsize = { 0 34 }
							visible = "[Character.HasTitle]"
							text = "[Character.GetTitleNameShort]"
							fontsize_min = 10
							max_width = 188
							elide = right
							parentanchor = hcenter
							tooltip = "[Character.GetTitle.GetTooltip]"
						}
						flowcontainer = {
							spacing = 8
							ignoreinvisible = no
							visible = "[Not( Character.HasTitle )]"
							widget = {
								size = { 30 30 }
								parentanchor = left|vcenter
								icon = {
									texture = "gfx/interface/icons/shared_icons/age.dds"
									size = { 26 26 }
									parentanchor = right
									position = { -4 0 }
								}
							}
							tag_dark = {
								minimumsize = { 0 34 }
								text = "[Character.GetAgeInfo]"
								max_width = 180
								elide = right
								fontsize_min = 12
							}
							tooltip = "[Character.GetAgeOnDeathOrBirthDate]"
						}
					}

					flowcontainer = {
						spacing = 8
						direction = vertical
						background = {
							shaderfile = "gfx/FX/pdxgui_default.shader"
							using = flat_background_white
							using = border_medium_torn_alpha
							alpha = @character_stats_bg_alpha
							margin = { 8 8 }
							margin_bottom = 12
						}
						#using = NoninteractableBG
						#blockoverride "BackAlpha" { alpha = @character_stats_bg_alpha }
						icon_and_text_dark = {
							name = "Culture"
							size = { 168 26 }

							blockoverride "Icon" { using = icon_culture }
							blockoverride "Text" { text = "[Character.GetCulture.GetName]" }
						}

						icon_and_text_dark = {
							name = "Religion"
							size = { 168 26 }

							blockoverride "Icon" { using = icon_religious }
							blockoverride "Text" { text = "[Character.GetReligion.GetName]" }
						}

					}

				}

				flowcontainer = {
					ignoreinvisible = yes
					parentanchor = bottom
					spacing = 5

					icon_card = {
						size = { 44 44 }
						blockoverride "Icon"
						{
							texture = "[GetPartyIcon( Character.GetParty )]"
						}
						block "PartyIconVisibility"
						{
							visible = "[Character.ShowParty]"
						}
						tooltip = "[Character.GetPartyTooltip]"
					}

					block "traits" {

						dynamicgridbox = {
							#using = NoninteractableBG
							datamodel = "[Character.GetTraits]"
							flipdirection = yes
							item = {
								icon = {
									size = { 40 40 }
									texture = "[GetTraitIcon(Trait.GetIconHook)]"

									tooltipwidget = {
										container = {
											using = GeneralTooltipSetup
											alwaystransparent = no

											widget = {
												name = "background"
												using = DefaultTooltipBackground
												size = { 100% 100% }
												alwaystransparent = no
											}
											flowcontainer = {
												flowcontainer = {
													direction = vertical
													ignoreinvisible = yes

													textbox = {
														name = "TooltipText1"
														using = DefaultTooltipText
														margin = { 20 0 }
														margin_top = 10
														multiline = yes
														maximumsize = { 350 -1 }
														text = "#T [Trait.GetName]"
													}

													textbox = {
														name = "TooltipText2"
														using = DefaultTooltipText
														margin = { 20 0 }
														margin_bottom = 20
														multiline = yes
														maximumsize = { 350 -1 }
														text = "[Trait.GetEffect]"
													}
												}
												margin_widget = {
													size = { 10 100% }
													margin = { 0 6 }
													using = ProgressLockIndicator
												}
											}
										}
									}

								}

							}
						}
					}
				}

				flowcontainer = {
					background = {
						shaderfile = "gfx/FX/pdxgui_default.shader"
						using = flat_background_white
						using = border_medium_torn_alpha
						alpha = @character_stats_bg_alpha
						margin = { 8 8 }
						margin_bottom = 14
					}
					#using = NoninteractableBG
					#blockoverride "BackAlpha" { alpha = @character_stats_bg_alpha }
					parentanchor = bottom|right
					direction = vertical
					spacing = 8
					position = { -2 -9 }
					margin_right = 2

					flowcontainer = {
						spacing = 8
						icon_and_text_dark = {
							name = "Martial"
							size = { 80 0 }
							tooltip = "[Character.GetMartialToolTip]"

							blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/military.dds" }
							blockoverride "Text" { text = "[Character.GetMartial]" }
						}

						icon_and_text_dark = {
							name = "Finesse"
							size = { 80 0 }
							tooltip = "[Character.GetFinesseToolTip]"

							blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/civic.dds" }
							blockoverride "Text" { text = "[Character.GetFinesse]" }
						}

					}

					flowcontainer = {
						spacing = 8
						icon_and_text_dark = {
							name = "Oratory"
							size = { 80 0 }
							tooltip = "[Character.GetCharismaToolTip]"

							blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/oratory.dds" }
							blockoverride "Text" { text = "[Character.GetCharisma]" }
						}

						icon_and_text_dark = {
							name = "Zeal"
							size = { 80 0 }
							tooltip = "[Character.GetZealToolTip]"

							blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/religious.dds" }
							blockoverride "Text" { text = "[Character.GetZeal]" }
						}
					}
				}

				flowcontainer = {
					background = {
						shaderfile = "gfx/FX/pdxgui_default.shader"
						using = flat_background_white
						using = border_medium_torn_alpha
						alpha = @character_stats_bg_alpha
						margin = { 8 8 }
						margin_bottom = 12
					}
					#using = NoninteractableBG
					#blockoverride "BackAlpha" { alpha = @character_stats_bg_alpha }
					parentanchor = vcenter|right
					direction = vertical
					spacing = 8
					position = { -2 -3 }
					margin_right = 2

					flowcontainer = {
						spacing = 8
						icon_and_text_dark = {
							name = "Loyalty"
							size = { 80 0 }

							tooltip = "[Character.GetLoyaltyToolTip]"

							blockoverride "Icon" {
								texture = "gfx/interface/icons/shared_icons/loyalty.dds"
							}
							blockoverride "Text" {
								text = "[Character.GetLoyalty|0]"
							}
						}

						icon_and_text_dark = {
							name = "Popularity"
							size = { 80 0 }
							tooltip = "[Character.GetPopularityToolTip]"

							blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/popularity.dds" }
							blockoverride "Text" { text = "[Character.GetPopularity|0]" }
						}

					}

					flowcontainer = {
						spacing = 8
						ignoreinvisible = yes
						icon_and_text_dark = {
							name = "Prominence"
							size = { 80 0 }
							tooltip = "[Character.GetProminenceToolTip]"
							visible = "[Not( Character.GetEmployer.GetGovernment.IsRepublic )]"
							blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/prominence.dds" }
							blockoverride "Text" { text = "[Character.GetProminence|0]" }
						}

						icon_and_text_dark = {
							name = "Statesmanship"
							size = { 80 0 }
							tooltip = "[Character.GetExperienceInformation]"
							visible = "[Character.GetEmployer.GetGovernment.IsRepublic]"
							blockoverride "Icon" { using = icon_statesmanship }
							blockoverride "Text" { text = "[Character.GetExperience|0]" }
						}

						icon_and_text_dark = {
							name = "Corruption"
							size = { 80 0 }
							tooltip = "[Character.GetCorruptionToolTip]"

							blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/corruption.dds" }
							blockoverride "Text" { text = "[Character.GetCorruption|0]" }
						}
					}
				}

				flowcontainer = {
					spacing = 2
					direction = vertical
					parentanchor = vcenter|right
					position = { -298 -2 }
					background = {
						shaderfile = "gfx/FX/pdxgui_default.shader"
						using = flat_background_white
						using = border_medium_torn_alpha
						alpha = @character_stats_bg_alpha
						margin = { 8 8 }
						margin_bottom = 12
					}

					#using = NoninteractableBG
					#blockoverride "BackAlpha" { alpha = @character_stats_bg_alpha }
					minimumsize = { 120 67 }
					visible = "[Character.HasTitle]"
					flowcontainer = {
						spacing = 8
						ignoreinvisible = no

						widget = {
							size = { 30 30 }
							parentanchor = left|vcenter
							icon = {
								texture = "gfx/interface/icons/shared_icons/age.dds"
								size = { 26 26 }
								parentanchor = right
								position = { -1 0 }
							}
						}
						tag_dark = {
							minimumsize = { 0 34 }
							text = "[Character.GetAgeInfo]"
							max_width = 65
							elide = right
							fontsize_min = 10
						}
						tooltip = "[Character.GetAgeOnDeathOrBirthDate]"
					}
					widget = { size = { 0 1 } }
					icon_and_text_dark = {
						size = { 100 34 }
						blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/land_combat.dds" }
						blockoverride "Text" { text = "[Character.GetNumberOfLoyalCohorts]" }
						tooltip = "LOYAL_VETS_TOOLTIP"
					}
				}

				flowcontainer = {
					background = {
						shaderfile = "gfx/FX/pdxgui_default.shader"
						using = flat_background_white
						using = border_medium_torn_alpha
						alpha = @character_stats_bg_alpha
						margin = { 8 8 }
						margin_bottom = 12
					}
					#using = NoninteractableBG
					#blockoverride "BackAlpha" { alpha = @character_stats_bg_alpha }
					parentanchor = vcenter|right
					direction = vertical
					spacing = 8
					position = { -182 -3 } ###
					icon_and_text_dark = {
						name = "Loyalty"
						size = { 106 0 }

						tooltip = "[Character.GetPowerBaseInfo]"

						blockoverride "Icon" {
							texture = "gfx/interface/icons/shared_icons/power_base.dds"
						}
						blockoverride "Text" {
							text = "[Character.GetPowerBase|0]"
						}
					}
					icon_and_text_dark = {
						name = "Prominence"
						size = { 106 0 }
						tooltip = "[Character.GetWealthInformation]"

						blockoverride "Icon" { using = icon_treasury }
						blockoverride "Text" { text = "[Character.GetWealth|0]" }
					}
				}
				icon = {
					size = { 20 20 }
					texture = "gfx/interface/tooltip/lock_icon_alpha_s.dds"
					position = { 0 65 }
					visible = "[PdxGuiWidget.IsTooltipLocked]"
					background = {
						texture = "gfx/interface/tooltip/lock_icon_alpha_s.dds"
						shaderfile = "gfx/FX/pdxgui_default.shader"
						margin = { 3 3 }
						parentanchor = center
						color = { 0 0 0 1 }
					}
				}
			}
		}
	}

}