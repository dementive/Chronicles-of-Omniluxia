l_english:
 #
 appoint_dictator:0 "Appoint Dictator"
 appoint_dictator_past:0 "Appointed Dictator"
 appoint_dictator_act:0 "Appoint Dictator"
 appoint_dictator_act_past:0 "Appointed Dictator"
 appoint_dictator_effect_tooltip:1 "Emergency powers are granted to [actor.GetRulerTitle|Y] [target.GetName|Y] until you are next at peace. The [SCOPE.sC('actor').Custom('get_court_type')] will vote in your favor for most actions and a temporary extension will be added to your [SCOPE.sC('actor').GetRulerTitle|Y]'s current term."
 #
 ca_convert_religion:0 "Force Conversion"
 ca_convert_religion_past:0 "Forced Conversion"
 ca_convert_religion_act:0 "Force Conversion"
 ca_convert_religion_act_past:0 "Forced Conversion"
 ca_convert_religion_tooltip_republic:0 "The severity of the #Y Recently Converted#! modifier will depend on the #Y Zeal#! skill of your [GetOffice('office_pontifex').GetCulturalName(SCOPE.sChar('target').GetCharacter.GetCountry)], versus that of the target."
 ca_convert_religion_tooltip_monarchy:0 "The severity of the #Y Recently Converted#! modifier will depend on the #Y Zeal#! skill of your [GetOffice('office_high_priest_monarchy').GetCulturalName(SCOPE.sChar('target').GetCharacter.GetCountry)], versus that of the target."
 ca_convert_religion_tooltip_tribal:0 "The severity of the #Y Recently Converted#! modifier will depend on the #Y Zeal#! skill of your [GetOffice('office_high_priest').GetCulturalName(SCOPE.sChar('target').GetCharacter.GetCountry)], versus that of the target."
 #
 adopt_to_family:0 "Adopt"
 adopt_to_family_past:0 "$CHAR$ was adopted into the Royal Family."
 adopt_to_family_act:0 "Adopt $CHAR$ into the Royal Family."
 adopt_to_family_act_past:0 "$CHAR$ was adopted into the Royal Family of $COUNTRY$"
 adoption_explanation_tooltip:0 "By accepting [SCOPE.sChar('target').GetName|Y] into our ancient #Y Family#! we are reducing its #Y Prestige#! and standing among the other Families in our country.\n\n"
 bastard_adoption_tooltip:0 "Since [SCOPE.sChar('target').GetPraenomen] is the [SCOPE.sChar('target').GetDaughterSon|Y] of [SCOPE.sC('actor').GetRuler.GetPraenomen], the cost for Adoption is reduced.\n\n"
 sibling_adoption_tooltip:2 "Since [SCOPE.sChar('target').GetPraenomen] is the [SCOPE.sChar('target').GetSisterBrother|Y] of [SCOPE.sC('actor').GetRuler.GetPraenomen], the cost for Adoption is reduced.\n\n"
 friend_adoption_tooltip:1 "Since [SCOPE.sChar('target').GetPraenomen] is a #Y Friend#! of [SCOPE.sC('actor').GetRuler.GetPraenomen], the cost for Adoption is reduced.\n\n"
 lover_adoption_tooltip:0 "Since [SCOPE.sChar('target'.GetPraenomen] has children outside of wedlock with [SCOPE.sC('actor').GetRuler.GetPraenomen], the cost for Adopting [SCOPE.sChar('target'.GetHerHim] is greatly increased.\n\n"
 adoption_explanation_event_tooltip:0 "By accepting [THIS.GetCharacter.GetName|Y] into our ancient #Y Family#! we are reducing its #Y Prestige#! and standing among the other Families in our country.\n\n"
 bastard_adoption_event_tooltip:1 "Since [THIS.GetCharacter.GetName|Y] is the [THIS.GetCharacter.GetDaughterSon|Y] of [GetRootScope.GetCharacter.GetName|Y] the Prestige cost for Adoption is reduced.\n\n"
 sibling_adoption_event_tooltip:1 "Since [THIS.GetCharacter.GetName|Y] is the [THIS.GetCharacter.GetSisterBrother|Y] of [GetRootScope.GetCharacter.GetName|Y] the Prestige cost for Adoption is reduced.\n\n"
 friend_adoption_event_tooltip:1 "Since [THIS.GetCharacter.GetName|Y] is a close friend of [GetRootScope.GetCharacter.GetName|Y] the Prestige cost for Adoption is reduced.\n\n"
 lover_adoption_event_tooltip:1 "Since [THIS.GetCharacter.GetName|Y] has children outside of wedlock with [GetRootScope.GetCharacter.GetName|Y] the Prestige cost for Adopting [THIS.GetCharacter.GetHerHim] is greatly increased.\n\n"
 adoption_explanation_from_ruler_tooltip:1 "These effects will be milder when adopting Friends, Children, or Siblings of the [actor.GetRulerTitle|Y], and harsher when adopting extra-marital relations"
 adoption_prestige_tt:0 "Adopting into our #Y Family#! will #R reduce#! its Prestige @prestige!"
 adoption_legitimacy_tt:0 "[actor.GetName] will also #R lose#! Legitimacy @legitimacy!"
 bastard_adoption_from_ruler_tooltip:0 "Since [SCOPE.sChar('target').GetName|Y] is the [SCOPE.sChar('target').GetDaughterSon|Y] of [SCOPE.sC('actor').GetRuler.GetName|Y] the Prestige cost for Adoption is reduced.\n\n"
 sibling_adoption_from_ruler_tooltip:1 "Since [SCOPE.sChar('target').GetName|Y] is the [SCOPE.sChar('target').GetSisterBrother|Y] of [SCOPE.sC('actor').GetRuler.GetName|Y] the Prestige cost for Adoption is reduced.\n\n"
 friend_adoption_from_ruler_tooltip:0 "Since [SCOPE.sChar('target').GetName|Y] is a close friend of [SCOPE.sC('actor').GetRuler.GetName|Y] the Prestige cost for Adoption is reduced.\n\n"
 lover_adoption_from_ruler_tooltip:0 "Since [SCOPE.sChar('target').GetName|Y] has children outside of wedlock with [SCOPE.sC('actor').GetRuler.GetName|Y] the Prestige cost for Adopting [SCOPE.sChar('target').GetHerHim] is greatly increased.\n\n"
 #
 adoption:0 "Arrange Adoption"
 adoption_past:0 "Arranged an adoption"
 adoption_act:0 "$CHAR$ will adopt a new family member"
 adoption_select_title:0 "Adoption to the family of $CHAR$"
 adoption_act_past:0 "$CHAR$ adopted [SCOPE.sChar('recipient').GetName]."
 #
 seize_property:1 "Proscribe"
 seize_property_past:2 "Proscribed $CHAR$"
 seize_property_act:2 "Proscribe $CHAR$"
 seize_property_act_past:1 "$COUNTRY$ issued Proscription on $CHAR$"
 seize_property_relatives_tooltip:1 "Every family member of #Y [SCOPE.sChar('target').GetName]#! will lose #Y 20#! Loyalty."
 family_fallen_from_grace:1 "The '[target.GetFamily.GetName|Y]' will #R cease#! to be considered a Great Family, any Family Holdings will be seized, and every former Member ([SCOPE.ScriptValue('seize_property_svalue')|Y0]) will lose #R 40#! Loyalty@loyalty_icon!for #Y  240 months#!"
 family_holdings_gone_tt:1 "All '[target.GetFamily.GetName|Y]' Family Holdings will be confiscated."
 #every_family_character_tt:0 "\nEvery #Y [SCOPE.sChar('target').GetFamilyDisplayName] Family Member#! will lose #R 50#! Loyalty for 20 years."
 was_once_great:0 "Fallen from Grace"
 desc_was_once_great:0 "This character was once a member of one of the great families of the nation, but as that family fell from grace they lost most of both their influence and power. To some extent the memory of what once was is still haunting them all."
 #
 unappoint_dictator:0 "Return Dictatorship"
 unappoint_dictator_effect_tooltip:1 "Your [SCOPE.sC('actor').GetRulerTitle|Y] will be forced to return Dictatorial powers to the [actor.Custom('get_court_type')]"
 unappoint_dictator_act:1 "Return powers to the senate"
 unappoint_dictator_act_past:1 "Returned powers to the senate"
 not_giving_up_power:0 "You cannot return dictatorial powers, as this character has refused to return them."
 not_dictator_any_more:1 "@trigger_no! A new leader is in power."
 dictator_leaves_tt:0 "Powers surrendered:"
 #
 stop_seeking_treatment:0 "Stop Seeking Treatment"
 stop_seeking_treatment_past:0 "Stopped seeking treatment for an ailment."
 stop_seeking_treatment_act:0 "Stop seeking treatment for an ailment."
 stop_seeking_treatment_act_past:0 "Stopped seeking treatment for an ailment."
 #
 hold_triumph:0 "Hold Triumph"
 hold_triumph_past:0 "Triumph Held!"
 hold_triumph_act:0 "Hold a triumph for $CHAR$"
 hold_triumph_act_past:0 "$COUNTRY$ held a glorious and extravagant triumph for $CHAR$."
 TRIUMPH_RECENTLY_HELD:1 "[SCOPE.sCountry('actor').GetName|Y] recently held a Triumph and can not hold another until [SCOPE.sCountry('actor').GetVariableExpiry('triumph_recently_held')|Y].\n"
 triumph_l_tt:1 "[target.GetName] will #Y lose their command#!, gain #G 20#! Loyalty@loyalty_icon!for #Y 120 months#!, and gain #G 25#! Popularity @popularity_icon!"
 #
 bribe_character:0 "Bribe"
 bribe_character_past:0 "Character Bribed!"
 bribe_character_act:0 "Bribe $CHAR$ to become more loyal"
 bribe_character_act_past:0 "$COUNTRY$ made sure that $CHAR$ is far more loyal."
 BRIBED_RECENTLY:2 "[SCOPE.sChar('target').GetName] was recently convinced, and will refuse further involvement until [SCOPE.sChar('target').GetVariableExpiry('ca_character_bribed')|Y]\n"
 bribe_actor_tt:0 "[actor.GetRuler.GetName] will pay #R 100#!@gold! of [actor.GetRuler.GetHerHis] personal wealth and gain #R 1#! Corruption @corruption_icon!"
 bribe_target_tt:0 "[target.GetName] will gain #G 100#!@gold!, #G 15#! Loyalty@loyalty_icon!for #Y 48 months#!, and #R 5#! Corruption @corruption_icon!"
 #
 snakefolk_arrange_marriage:0 "Arrange Marriage"
 snakefolk_arrange_marriage_past:0 "Arranged a marriage"
 snakefolk_arrange_marriage_act:0 "Find a spouse for $CHAR$"
 snakefolk_arrange_marriage_select_title:0 "Arrange Marriage for $CHAR$"
 snakefolk_arrange_marriage_act_past:0 "$CHAR$ became married to [SCOPE.sChar('recipient').GetName]."
 arrange_marriage_tt:0 "[target.GetPraenomen] will marry a chosen suitor from [actor.GetName]"
 arrange_marriage_consort_tt:0 "The Consort will contribute skills higher than those of their spouse to the government in Monarchies"
 SELECT_TARGET:0 "Select"
 #
 arrange_marriage:0 "Arrange Marriage"
 arrange_marriage_past:0 "Arranged a marriage"
 arrange_marriage_act:0 "Find a spouse for $CHAR$"
 arrange_marriage_select_title:0 "Arrange Marriage for $CHAR$"
 arrange_marriage_act_past:0 "$CHAR$ became married to [SCOPE.sChar('recipient').GetName]."
 #
 marry_ruler:0 "Arrange Marriage with Ruler"
 marry_ruler_past:0 "Married Ruler!"
 marry_ruler_act:0 "Marriage!"
 marry_ruler_act_past:0 "$CHAR$ became married to [SCOPE.sCountry('actor').GetRuler.GetName]."
 #
 inspire_disloyalty:0 "Inspire Disloyalty"
 inspire_disloyalty_past:0 "Character more Disloyal!"
 inspire_disloyalty_act:0 "Inspire $CHAR$ to become less loyal"
 inspire_disloyalty_act_past:0 "$COUNTRY$ made sure that $CHAR$ is a bit less loyal."
 not_already_inspiring:0 "You can only inspire disloyalty in #Y 1#! character at a time."
 #
 recruit:0 "Recruit"
 recruit_past:0 "Character recruited!"
 recruit_act:0 "Recruit $CHAR$ to join our service instead!"
 recruit_act_past:0 "$COUNTRY$ recruited $CHAR$ to their service."
 recruit_allow_tt:0 "Is not married to a ruler or an important [target.GetEmployer.GetAdjective] character."
 #
 recruit_general:1 "Woo General"
 recruit_general_past:1 "General wooed!"
 recruit_general_act:1 "Woo $CHAR$ to join our service instead!"
 recruit_general_act_past:1 "$COUNTRY$ wooed $CHAR$ to their service."
 recruit_general_tt:0 "[target.GetName] and [target.GetHerHis] [legion|E] will defect to us."
 #
 snakefolk_secude_governor:0 "Entice Governor"
 snakefolk_secude_governor_past:0 "Governor Enticed!"
 snakefolk_secude_governor_act:1 "Entice $CHAR$ to Defect"
 snakefolk_secude_governor_act_past:1 "$COUNTRY$ enticed $CHAR$ to defect!"
 snakefolkseduce_governor_tooltip:0 "An offer is sent to #Y [SCOPE.sChar('target').GetName]#!!"
 #
 secude_governor:0 "Entice Governor"
 secude_governor_past:0 "Governor Enticed!"
 secude_governor_act:1 "Entice $CHAR$ to Defect"
 secude_governor_act_past:1 "$COUNTRY$ enticed $CHAR$ to defect!"
 seduce_governor_tooltip:0 "An offer is sent to #Y [SCOPE.sChar('target').GetName]#!!"
 #
 smear_character:0 "Smear Reputation"
 smear_character_past:0 "Character Smeared"
 smear_character_past_failed:0 "Character Impeccable!"
 smear_character_act:0 "Smear the reputation of $CHAR$"
 smear_character_act_past:0 "$COUNTRY$ achieved to smear the character of $CHAR$."
 #
 ca_character_loan:0 "Demand Loan"
 ca_character_loan_past:0 "Demanded a loan."
 ca_character_loan_act:0 "Demand money from $CHAR$"
 ca_character_loan_act_past:0 "$COUNTRY$ demanded money from $CHAR$"
 #
 ca_character_loan_repay:0 "Repay Loan"
 ca_character_loan_repay_past:0 "Repaid a loan."
 ca_character_loan_repay_act:0 "Repay money to $CHAR$"
 ca_character_loan_repay_act_past:0 "$COUNTRY$ repaid money to $CHAR$"
 #
 banish_char:0 "Banish"
 banish_char_past:0 "Character Banished!"
 banish_char_act:0 "Banish $CHAR$"
 banish_char_act_past:0 "$COUNTRY$ banished $CHAR$!"
 banish_effect_tt:0 "[SCOPE.sChar('target').GetName] will be banished to a chosen country."
 banish_char_select_title:0 "Select a Banishment Target"
 #
 blind_character:0 "Imperial Blinding"
 blind_character_past:0 "Character Blinded!"
 blind_character_act:0 "Blind $CHAR$"
 blind_character_act_past:0 "$COUNTRY$ blinded $CHAR$!"
 nazani_blind_effect_tt:0 "[SCOPE.sChar('target').GetName] will be #R Blinded#! and will be unable to lead an army or hold any office in the #E Nazani Empire#!."
 #
 sacrifice_prisoner:0 "Sacrifice"
 sacrifice_prisoner_past:0 "Character Sacrificed!"
 sacrifice_prisoner_act:0 "Sacrifice $CHAR$"
 sacrifice_prisoner_act_past:0 "$COUNTRY$ sacrificed $CHAR$"
 sacrifice_tooltip:2 "#Y Centralization#! @centralization! loss is a tenth of the target's #Y Martial#! @military_icon!"
 #
 execute_character:0 "Execute"
 execute_character_past:0 "Character Executed!"
 execute_character_act:0 "Execute $CHAR$"
 execute_character_act_past:0 "$COUNTRY$ executed $CHAR$."
 #
 support_primary_heir:1 "Demand Support for Heir"
 support_primary_heir_past:0 "$CHAR$ was encouraged to support the Primary Heir!"
 support_primary_heir_act:0 "Encourage $CHAR$ to support the Primary Heir!"
 support_primary_heir_act_past:1 "$CHAR$ now clearly sees who the heir is for $COUNTRY$."
 #
 free_hands:0 "Give Free Hands"
 free_hands_past:0 "Governor given free hands!"
 free_hands_act:0 "Give $CHAR$ free hands"
 free_hands_act_past:1 "Look the other way, while $CHAR$ makes the most of their position."
 free_hands_tooltip:3 "You will be unable to revoke this character's #Y Free Hands#! until #Y 2#! years have passed, and doing so will cost #R 15#! Loyalty@loyalty_icon!"
 free_hands_cooldown_tooltip:0 "You cannot revoke #Y Free Hands#! until at least #Y 2#! years have passed."
 #
 tie_hands:0 "Revoke Free Hands"
 tie_hands_past:0 "Revoked Free Hands"
 tie_hands_act:0 "Revoke Free Hands"
 tie_hands_act_past:0 "Revoked Free Hands"
 tie_hands_tooltip:0 "If this character loses their job, or is removed from office with Free Hands active, it will be removed, and they will lose #R 20#! Loyalty."
 #
 ransom_prisoner:0 "Ransom Prisoner"
 ransom_prisoner_past:0 "Character ransomed from prison!"
 ransom_prisoner_act:0 "Ransom $CHAR$ from foreign prison"
 ransom_prisoner_act_past:0 "$COUNTRY$ ransomed $CHAR$ from foreign prison"
 ransom_prisoner_tooltip:0 "Open up negotiations to ransom #Y [SCOPE.sChar('target').GetName]#! from capture."
 #
 release_prisoner:0 "Release Prisoner"
 release_prisoner_past:0 "Character released from prison!"
 release_prisoner_act:0 "Release $CHAR$ from prison"
 release_prisoner_act_past:0 "$COUNTRY$ released $CHAR$ from prison."
 release_prisoner_tooltip:2 "If [target.GetName] is from [actor.GetName], or their home country no longer exists, they will stay here."
 #
 imprison:0 "Imprison"
 imprison_past:0 "Character Imprisoned"
 imprison_act:1 "Imprison $CHAR$"
 imprison_act_past:1 "$CHAR$ has been imprisoned."
 imprison_party_leader_tooltip:1 "Imprisoning a #Y Party Leader#! or #Y Family Head#! will destabilize your nation!"
 #
 assassinate:2 "Foreign Assassination"
 assassinate_past:2 "Planned foreign assassination!"
 assassinate_act:1 "Attempt to assassinate a foreign character"
 assassinate_act_past:2 "$COUNTRY$ has begun planning to assassinate $CHAR$!"
 assassinate_scheme:1 "Scheme: Assassinate"
 assassinate_scheme_past:1 "Planned assassination"
 assassinate_scheme_act:1 "Attempt to assassinate a rival of $CHAR$"
 assassinate_scheme_act_past:1 "$CHAR$ attempted to assassinate a rival"
 assassinate_scheme_select_title:0 "Select Target"
 employer_is_target_employer_tt:3 "[SCOPE.sC('actor').GetRuler.GetName] has at least one #Y Friend#! in #Y [SCOPE.sChar('target').GetEmployer.GetName]#! (must not be a #Y Close Relative#! of [target.GetName], #Y Master of the Guard#!, or #Y Bodyguard#!)."
 assassinate_attempt_effect_tooltip:0 "Our agents will begin plotting to assassinate #Y [SCOPE.sChar('target').GetName]#!!"
 only_one_assassination:0 "You may only plan one assassination at a time."
 assassinate_internal_rival_tt:0 "[target.GetName] has at least one Rival in [actor.GetName]."
 assassinate_internal_scheme_tt:0 "[target.GetName] is not currently planning an assassination."
 scheme_assassinate_tt:0 "[actor.GetRuler.GetPraenomen] will attempt to assassinate a chosen Rival."
 #
 assassinate_scheme_other:0 "Assassinate Rival"
 assassinate_scheme_other_past:0 "Planned the assassination of $CHAR$"
 assassinate_scheme_other_act:0 "Attempt to assassinate $CHAR$"
 assassinate_scheme_other_act_past:0 "Attempted to assassinate $CHAR$"
 scheme_assassinate_other_tt:0 "[actor.GetRuler.GetPraenomen] will attempt to assassinate [target.GetPraenomen]"
 #
 assassinate_own_ruler:1 "Murder Dictator"
 assassinate_own_ruler_past:1 "Dictator murdered"
 assassinate_own_ruler_past_failed:1 "Dictator avoided murder!"
 assassinate_own_ruler_act:1 "Attempt to murder our own dictator"
 assassinate_own_ruler_act_past:1 "$COUNTRY$ has murdered their own dictator."
 #
 imprison_republic_trial:0 "Accuse of Crime"
 imprison_republic_trial_act:0 "Accuse of Crime"
 #
 BASE_CHANCE_CI:0 "Base: $VAL|+=$"
 CI_CHANCE_FINESSE:0 "$CHAR|Y$ Finesse: $VAL|+=$"
 WE:0 "We"
 CHAR_INTERACTION_SETUP:0 "When we have performed a character interaction."
 CHAR_INTERACTION_HEADER:0 ""
 CHAR_INTERACTION_1:1 "$TITLE$"
 CHAR_INTERACTION_2:0 "$DESC$"
 CHAR_INTERACTION_3:0 ""
 CHAR_INTERACTION_4:0 "$EFECT$"
 CHAR_INTERACTION_5:0 ""
 CHAR_INTERACTION_6:0 ""
 CHAR_INTERACTION_LOG:0 "$DESC$"
 CHAR_INTERACTION_BTN1:0 "OK"
 CHAR_INTERACTION_BTN2:0 "OK"
 CHAR_INTERACTION_BTN3:0 "Go to"
 CHAR_INTERACTION_MAP:0 ""
 CHAR_INTERACTION_ON_US_SETUP:0 "When another nation performs a character interaction on our of our characters."
 CHAR_INTERACTION_ON_US_HEADER:0 ""
 CHAR_INTERACTION_ON_US_1:2 "$TITLE$"
 CHAR_INTERACTION_ON_US_2:0 "$DESC$"
 CHAR_INTERACTION_ON_US_3:0 ""
 CHAR_INTERACTION_ON_US_4:0 "$EFECT$"
 CHAR_INTERACTION_ON_US_5:1 "$DETAILS$"
 CHAR_INTERACTION_ON_US_6:1 "$FAMILY$"
 CHAR_INTERACTION_ON_US_LOG:0 "$DESC$"
 CHAR_INTERACTION_ON_US_BTN1:0 "OK"
 CHAR_INTERACTION_ON_US_BTN2:0 "OK"
 CHAR_INTERACTION_ON_US_BTN3:0 "Go to"
 CHAR_INTERACTION_ON_US_MAP:0 ""
 #
 based_on_character_wealth_tooltip:0 "The cost of this interaction is based on the wealth of the target character."
 get_treatable_disease_tooltip:1 "[target.GetName] will begin #Y $scheme_seek_treatment$#! for [target.GetHerHis] #Y [SCOPE.sChar('target').Custom('get_treatable_disease')]#!."
 seek_treatment:1 "Scheme: Seek Treatment"
 seek_treatment_past:0 "Sought treatment for an ailment."
 seek_treatment_act:1 "Purchase treatment for $CHAR$."
 seek_treatment_act_past:0 "We sought treatment for $CHAR$."
 #
 hold_games:0 "Hold Games"
 hold_games_act:0 "Hold Games for the People"
 hold_games_past:0 "Held Games"
 hold_games_act_past:0 "$COUNTRY$ has held games."
 GAMES_RECENTLY_HELD:1 "@trigger_no![SCOPE.sCountry('actor').GetName|Y] recently arranged Games and can not hold more of them until [SCOPE.sCountry('actor').GetVariableExpiry('games_recently_held')|Y]\n"
 hold_games_scheme_select_title:0 "$hold_games$"
 #grant_citizenship
 grant_citizenship:0 "Grant Citizenship Status"
 grant_citizenship_act:0 "Grant citizenship status to $CHAR$."
 grant_citizenship_past:0 "Granted citizenship status to $CHAR$."
 grant_citizenship_act_past:0 "Granted citizenship status to $CHAR$."
 #
 royal_marriage_acceptance_tooltip_base:0 "        #Y 20#! Minimum Value"
 royal_marriage_acceptance_tooltip_legitimacy:0 "        #R +[SCOPE.ScriptValue('royal_marriage_acceptance_vs_legitimacy')]#! [SCOPE.sC('actor').GetAdjective] Legitimacy (#Y [SCOPE.ScriptValue('royal_marriage_acceptance_our_legitimacy')]#!) vs [SCOPE.sChar('target').GetEmployer.GetAdjective] Legitimacy (#Y [SCOPE.ScriptValue('royal_marriage_acceptance_their_legitimacy')]#!)"
 royal_marriage_acceptance_tooltip_larger:0 "        #R +20#! [SCOPE.sChar('target').GetEmployer.GetName] is mightier than us"
 has_valid_marriage_candidate_female:1 "#Y [SCOPE.sC('actor').GetName]#! has an unmarried adult female dynasty member."
 has_valid_marriage_candidate_male:1 "#Y [SCOPE.sC('actor').GetName]#! has an unmarried adult male dynasty member."
 royal_marriage_tooltip_candidate_a:0 "Propose a marriage between #Y [SCOPE.sChar('royal_marriage_candidate').GetName]#! and #Y [SCOPE.sChar('target').GetName]#!."
 royal_marriage_tooltip_candidate_b:0 "Propose a marriage between #Y [SCOPE.sChar('royal_marriage_candidate_2').GetName]#! and #Y [SCOPE.sChar('target').GetName]#!."
 royal_marriage_tooltip_candidate_c:0 "Propose a marriage between #Y [SCOPE.sChar('royal_marriage_candidate_3').GetName]#! and #Y [SCOPE.sChar('target').GetName]#!."
 royal_marriage.1.t:0 "A Royal Union"
 royal_marriage.1.desc:0 "In the interests of future cooperation, we should decide which of our royal line we might offer in marriage to [SCOPE.sChar('target').GetName] of the royal house of [SCOPE.sChar('target').GetEmployer.GetName]."
 royal_marriage.1.a:0 "[SCOPE.sChar('royal_marriage_candidate').GetPraenomen] is a clear choice."
 royal_marriage.1.b:0 "Send [SCOPE.sChar('royal_marriage_candidate_2').GetPraenomen]."
 royal_marriage.1.c:0 "Suggest [SCOPE.sChar('royal_marriage_candidate_3').GetPraenomen]."
 royal_marriage.1.d:0 "Perhaps this is unwise."
 female_moves_to_tooltip:1 "#Y [SCOPE.sChar('female_marriage_candidate').GetName]#! will move to #Y [SCOPE.sChar('male_marriage_candidate').GetEmployer.GetName]#! to be with her husband."
 royal_marriage.2.t:0 "Marriage Proposal"
 royal_marriage.2.desc:1 "The royal house of [SCOPE.sC('proposer_country').GetName] sends an interesting request. They suggest that a strategic marriage between [SCOPE.sChar('recipient').GetName] and [SCOPE.sChar('target').GetName] might go a long way towards improving our diplomatic relations.\n\nNeedless to say, this comes with some risk; the integrity of our royal line is paramount, yet the opportunities this may bring are not to be discarded so lightly."
 royal_marriage.2.a:0 "Let us make merry!"
 royal_marriage.2.b:0 "A terrible plan."
 royal_marriage.2.c:0 "This is simply not viable."
 royal_marriage.3.t:0 "Marriage Declined"
 royal_marriage.3.desc:0 "Due to reasons beyond their control, the [SCOPE.sC('receiver_country').GetAdjective] court cannot approve our marriage request."
 royal_marriage.3.a:0 "Disappointing."
 royal_marriage.4.t:0 "Marriage Refused"
 royal_marriage.4.desc:0 "The ungrateful curs in [SCOPE.sC('receiver_country').GetName] have refused our generous offer to be wedded to our royal house.\n\nOur people shall remember this outrage!"
 royal_marriage.4.a:0 "Disappointing."
 royal_marriage.5.t:0 "Marriage Approved!"
 royal_marriage.5.desc:1 "The [SCOPE.sC('receiver_country').GetAdjective] house have graciously accepted our offer of royal marriage. [SCOPE.sChar('female_marriage_candidate').GetName] has traveled to [SCOPE.sChar('male_marriage_candidate').GetEmployer.GetName] in order to meet her betrothed, [SCOPE.sChar('male_marriage_candidate').GetName].\n\nMay our two nations prosper as a result of this mutual display of affection."
 royal_marriage.5.a:0 "Splendid!"
 current_marriage_proposal:2 "You must not be in a current marriage negotiation."
 female_shall_move_tooltip:1 "The female subject in a marriage will always move to her husband's country.\n\nChildren will marry when both parties are over the age of #Y 16#!. Their prospective betrothal will also end if either character moves country or seeks a spouse by other means."
 propose_marriage:2 "Royal Marriage"
 propose_marriage_act:2 "Arrange a marriage between a member of our dynasty and $CHAR$."
 propose_marriage_past:1 "Arranged a royal marriage with $CHAR$."
 propose_marriage_act_past:2 "Arranged a royal marriage between [SCOPE.sChar('recipient').GetName] and $CHAR$."
 propose_marriage_select_title:0 "$propose_marriage_act$"
 betrothed_no_tt:0 "Is not betrothed to another country's ruling dynasty. ([target.MakeScope.GetVariable('betrothed_flag').GetCharacter.GetEmployer.GetName])"
 betrothed_broken_tt:0 "[target.GetPraenomen] will no longer be considered for a Royal Marriage with [target.MakeScope.GetVariable('betrothed_flag').GetCharacter.GetName] of [target.MakeScope.GetVariable('betrothed_flag').GetCharacter.GetEmployer.GetName]"
 #
 friend_progress_small:0 "Your Ruler will make a #Y Small#! amount of progress towards befriending [SCOPE.sChar('friend_target').GetName]."
 friend_progress_moderate:0 "Your Ruler will make a #Y Moderate#! amount of progress towards befriending [SCOPE.sChar('friend_target').GetName]."
 friend_progress_large:0 "Your Ruler will make a #Y Large#! amount of progress towards befriending [SCOPE.sChar('friend_target').GetName]."
 currently_befriending_tooltip:1 "Already befriending a character"
 defriend:0 "Remove Friend"
 defriend_act:0 "Remove friendship with $CHAR$."
 defriend_act_past:0 "Removed friendship with $CHAR$."
 defriend_past:0 "Removed friendship with $CHAR$."
 befriend:0 "Make Friends"
 befriend_act:0 "Attempt to make friends with $CHAR$."
 befriend_act_past:0 "Attempted to make friends with $CHAR$."
 befriend_past:0 "Attempted to make friends with $CHAR$."
 #
 stop_inspire_disloyalty:0 "Stop Inspiring Disloyalty"
 stop_inspire_disloyalty_act:0 "Stop inspiring disloyalty"
 stop_inspire_disloyalty_past:0 "Stopped inspiring disloyalty"
 stop_inspire_disloyalty_act_past:0 "Stopped inspiring disloyalty"
 stop_inspiring_disloyalty_tooltip:0 "You will stop inspiring disloyalty in foreign characters."
 adjacent_provinces_enticed:1 "[provinces|E] adjacent to our country with less than #Y 50#! Province Loyalty@loyalty_icon!governed by [target.GetName] will be annexed."
 province_claims_enticed:0 "#Y [SCOPE.sChar('target').GetEmployer.GetName]#! will gain #Y Claims#! on all Provinces transferred."
 inspire_cooldown_tooltip:0 "You cannot revoke #Y Inspire Disloyalty#! until at least #Y 2#! years have passed."
 inspire_cooldown_action_tooltip:0 "You will be unable to revoke #Y Inspire Disloyalty#! until at least #Y 2#! years have passed."
 already_inspiring_tooltip:0 "Already inspiring disloyalty in a foreign character!"
 #
 rival_ruler:0 "Make Rival"
 rival_ruler_act:0 "Make $CHAR$ a rival"
 rival_ruler_past:0 "Made $CHAR$ a rival"
 rival_ruler_act_past:0 "Made $CHAR$ a rival"
 #
 succession_crisis_make_mercenary:0 "Entice to Become Mercenary"
 succession_crisis_make_mercenary_act:0 "Entice $CHAR$ to become a mercenary"
 succession_crisis_make_mercenary_act_past:0 "Enticed $CHAR$ to become a mercenary"
 succession_crisis_make_mercenary_past:0 "Enticed $CHAR$ to become a mercenary"
 #
 deserters_already_encouraged_tooltip:0 "@trigger_no! You can only use Encourage Deserters on a successor once every #Y 5#! years.\n"
 unit_is_destroyed_tooltip:0 "A random subunit from the army of #Y [SCOPE.sChar('target').GetName]#! deserts."
 succession_crisis_encourage_deserters:0 "Encourage Deserters"
 succession_crisis_encourage_deserters_act:0 "Encourage Deserters"
 succession_crisis_encourage_deserters_past:0 "$COUNTRY$ encouraged armies to desert from $CHAR$"
 succession_crisis_encourage_deserters_act_past:0 "$COUNTRY$ encouraged armies to desert from $CHAR$"
 #
 recently_supported_sc_tooltip:1 "A pretender can only be supported once every #Y 2#! years."
 support_foreign_successor:1 "Intervene in Crisis"
 support_foreign_successor_act:1 "Support $CHAR$ in their efforts to overthrow their ruler"
 support_foreign_successor_past:1 "Supported the Pretender $CHAR$"
 support_foreign_successor_act_past:1 "Supported $CHAR$ in their efforts to overthrow their ruler."
 #
 coup_on_return_tooltip:0 "If you hire #Y [SCOPE.sChar('target').GetName]#! once they have become a mercenary, they are likely to attempt to seize the throne once again."
 #
 seize_successor_assets:0 "Seize Assets"
 seize_successor_assets_act:0 "Seize the assets of $CHAR$, while they are not present to protect them"
 seize_successor_assets_past:0 "$COUNTRY$ seized the assets of $CHAR$"
 seize_successor_assets_act_past:0 "$COUNTRY$ seized the assets of $CHAR$"
 #
 derival_ruler:0 "Remove Rival"
 derival_ruler_act:0 "Remove $CHAR$ as a rival"
 derival_ruler_past:0 "$COUNTRY$ removed $CHAR$ as a rival"
 derival_ruler_act_past:0 "$COUNTRY$ removed $CHAR$ as a rival"
 #
 stop_inspire_disloyalty_ruler:0 "End Inspiring Foreign Disloyalty"
 stop_inspire_disloyalty_ruler_act:0 "Cease inspiring foreign parties."
 stop_inspire_disloyalty_ruler_past:0 "Ceased inspiring foreign parties."
 stop_inspire_disloyalty_ruler_act_past:0 "$COUNTRY$ inspiring foreign parties."
 #TP
 flog:0 "Flog"
 flog_act:0 "Flog $CHAR$"
 flog_past:0 "$COUNTRY$ flogged $CHAR$"
 flog_act_past:0 "$COUNTRY$ flogged $CHAR$"
 rivals_gain_loyalty_flogging:0 "#Y All Rivals of [SCOPE.sChar('target').GetName]:#!"
 #
 grant_clan_autonomy:0 "Grant Clan Autonomy"
 grant_clan_autonomy_act:0 "Grant $CHAR$ total autonomy"
 grant_clan_autonomy_act_past:0 "Granted $CHAR$ total autonomy"
 grant_clan_autonomy_past:0 "$COUNTRY$ granted $CHAR$ total autonomy"
 clan_chief_secedes:0 "#Y [SCOPE.sChar('target').GetName]#! will leave to lead this country.\nIf [SCOPE.sChar('target').GetSheHe] has any family members in #Y [SCOPE.sC('actor').GetName]#!, they will also leave with [SCOPE.sChar('target').GetHerHim]."
 becomes_a_tributary_tt:0 "\nThey will become our #Y Tributary#!."
 every_remaining_chief_tt:0 "\n\nEvery remaining #Y Clan Chief#!:"
 #
 insulted_clan_chief:0 "Insulted Clan Chief"
 desc_insulted_clan_chief:0 "This clan chief is feeling particularly aggrieved over our exaltation of a peer."
 exalted_clan_chief:0 "Exalted Clan Chief"
 desc_exalted_clan_chief:0 "This clan chief is feeling magnanimous after being honored us."
 exalt_clan_chief:0 "Exalt Clan Chief"
 exalt_clan_chief_act:0 "Exalt $CHAR$"
 exalt_clan_chief_act_past:0 "Exalted $CHAR$"
 exalt_clan_chief_past:0 "Exalted $CHAR$"
 every_other_clan_chief:1 "\nEvery other #Y Clan Chief#! ([SCOPE.ScriptValue('exalt_chief_count')|0R]) loses #R 10#! Loyalty@loyalty_icon!for #Y 60 months#! and #R 0.02#! Monthly Popularity @popularity_icon! for #Y 60 months#!"
 no_other_clan_chief_modifier_tt:0 "@trigger_no! No #Y Clan Chief#! has the #Y Exalted Clan Chief#! modifier."
 exalt_tt:0 "[target.GetName] gains #G 20#! Loyalty@loyalty_icon!for #Y 120 months#! and #G +0.5#! Monthly Popularity @popularity_icon! for #Y 60 months#!"
 #
 grant_laurels:0 "Grant Capitulatory Honors"
 grant_laurels_act:0 "Grant capitulatory honors to $CHAR$"
 grant_laurels_past:0 "Granted capitulatory honors to $CHAR$"
 grant_laurels_act_past:0 "$COUNTRY$ granted capitulatory honors to $CHAR$"
 laurels_already_granted_tt:0 "Have already capitulated to this character"
 may_gain_nickname:1 "[target.GetSheHe|U] may gain a #Y Nickname#!."
 may_gain_cognomen:0 "[target.GetSheHe|U] may gain a #Y Cognomen#!."
 laurels_effect_tt:0 "[target.GetName] will gain #G 60#! Loyalty@loyalty_icon! for #Y 120 months#!, #G 20#! Prominence @prominence_icon!, and #G 20#! Popularity @popularity_icon!"
 #
 tutor_heir:1 "Tutor Child"
 tutor_heir_act:1 "Choose a new ambition for a royal child"
 tutor_heir_act_past:0 "Chose a new ambition for the royal offspring"
 tutor_heir_past:0 "Chose a new ambition for the royal offspring"
 tutor_heir_select_title:0 "Choose a Candidate to Tutor"
 tutor_tt:0 "Direct the [GetOffice('office_royal_tutor').GetCulturalName(SCOPE.sChar('actor').GetCountry)] in the education of a member of the ruling family"
 tutored_already_tt:0 "Has not been the target of Tutor in the last 180 days"
 tutor_child:0 "Tutor"
 tutor_child_act:0 "Choose a new ambition for $CHAR$"
 tutor_child_act_past:0 "hose a new ambition for $CHAR$"
 tutor_child_past:0 "Chose a new ambition for $CHAR$"
 child_of_appropriate_age_tt:0 "Is between the ages of #Y 12#! and #Y 16#!."
 tutor_exists_tt:0 "[actor.GetName] has a [GetOffice('office_royal_tutor').GetCulturalName(SCOPE.sChar('actor').GetCountry)]."
 #
 every_applicable_family_member_tt:1 "Every '[target.GetFamily.GetName|Y]' Family Member eligible for Office ([SCOPE.ScriptValue('stipends_char_count_svalue')|Y0]) gains #R +50.0%#! Monthly Wages, #G +2.0#! @gold! per month, and #G 20#! Loyalty@loyalty_icon!for #Y 60 months#!"
 grant_stipends:0 "Grant Stipends"
 grant_stipends_act:0 "Grant stipends to the family of $CHAR$"
 grant_stipends_act_past:0 "$COUNTRY$ granted stipends to the family of $CHAR$"
 grant_stipends_past:0 "Granted stipends to the family of $CHAR$"
 #
 gladiatorial_debut:0 "Arrange Gladiatorial Debut"
 gladiatorial_debut_act:0 "Arrange a gladiatorial debut"
 gladiatorial_debut_past:0 "Arranged a gladiatorial debut"
 gladiatorial_debut_act_past:0 "Arranged a gladiatorial debut"
 gladiator_outcome_tooltip:0 "[SCOPE.sC('actor').GetRuler.GetName] will gain Popularity @popularity_icon! based on the outcome of the match.\nThe winner of the fight will be #Y Released#! from prison."
 gladiatorial_debut_select_title:0 "Select an Opponent"
 #
 republic_reward_veterans:0 "Reward Veterans"
 republic_reward_veterans_act:0 "Pay off veterans loyal to $CHAR$"
 republic_reward_veterans_act_past:0 "$COUNTRY$ bought off veterans loyal to $CHAR$"
 republic_reward_veterans_past:0 "Bought off veterans loyal to $CHAR$"
 unit_is_bought_off_tooltip:1 "Up to #Y 4#! Cohorts or Veterans loyal to [target.GetName] will lose their Personal Loyalty or disappear, #R reducing#! [target.GetHerHis] #Y Power Base#!@power_base!."
 REWARDED_VETERANS_RECENTLY:1 "@trigger_no! Veterans loyal to [SCOPE.sChar('target').GetName] have been paid off recently, and we will be unable to convince others until [SCOPE.sChar('target').GetVariableExpiry('republic_reward_veterans_cooldown')|Y]\n"
 has_loyal_cohorts_or_veterans_tt:0 "Must have at least 1 #Y Loyal Veteran#! or #Y Loyal Cohort#!."
 #
 merc_buyoff:1 "Buy Off Mercenary"
 merc_buyoff_act:0 "Attempt to buy off $CHAR$"
 merc_buyoff_past:0 "Attempted to Buy Off $CHAR$"
 merc_buyoff_act_past:0 "Attempted to Buy Off $CHAR$"
 merc_buyoff_effect_tooltip:0 "An offer will be made to [SCOPE.sChar('target').GetName]. If their current employer refuses to match the offer, they will switch to our side!"
 merc_buyoff_effect_tooltip_sg:0 "An offer will be made to [SCOPE.GetRootScope.GetCharacter.GetName]. If their current employer refuses to match the offer, they will switch to our side!"
 merc_joined_us_tt:0 "[SCOPE.sChar('target').GetName] has joined us, with their band of mercenaries!"
 merc_employed_tt:0 "[target.GetName] is in the employ of a country."
 eligible_merc_buyoff_tt:0 "Mercenary unit is not in combat."
 warfare.3.t:0 "A Better Offer"
 warfare.3.desc:0 "The mercenaries we have hired, led by [SCOPE.sChar('target').GetName], have approached us claiming that the fiends in [SCOPE.sC('actor').GetName] have offered them a sizable sum to switch their allegiance.\n\nThey have shrewdly offered us a chance to match the offer, hoping to profit doubly from this underhanded deal."
 warfare.3.a:0 "Very well..."
 warfare.3.b:0 "Never!"
 warfare.4.t:0 "Offer Refused"
 warfare.4.desc:0 "The Mercenary band led by [SCOPE.sChar('target').GetName] has callously refused our offer of superior employment!\n\nIt seems that they received a better offer from the [SCOPE.sChar('target').GetEmployer.GetAdjective] villains."
 warfare.4.a:0 "Curses!"
 warfare.5.t:0 "Mercenary Buyout Successful!"
 warfare.5.desc:0 "The band of Mercenaries led by [SCOPE.sChar('target').GetName], has accepted our benevolent offer of employment. The villains in [SCOPE.sC('counter_target').GetName] apparently refused to consider matching our generous offer."
 warfare.5.a:0 "That is their loss!"
 merc_1_year_buyoff_tt:0 "A Mercenary cannot be enticed more than once a year."
 #
 create_mercenary_may_return_some_day_tt:1 "[SCOPE.sChar('target').GetName] will leave @[actor.GetFlag]! [actor.GetName] to become a mercenary. [target.GetSheHe|U] will return when [SCOPE.sChar('target').GetSheHe] feels that [SCOPE.sChar('target').GetSheHe] has nothing left to learn."
 create_mercenary:0 "Send Adventuring"
 create_mercenary_act:0 "Send $CHAR$ adventuring in foreign lands"
 create_mercenary_past:0 "Sent $CHAR$ adventuring in foreign lands"
 create_mercenary_act_past:0 "Sent $CHAR$ adventuring in foreign lands"
 estimated_chance_to_assassinate_tooltip_monarchy:1 "Chance of success #R decreases#! with the @military_icon! skill of the [target.GetEmployer.GetAdjective] #Y Master of the Guard#! (Current: [SCOPE.ScriptValue('get_master_of_guard_martial_svalue')|0Y])."
 estimated_chance_to_assassinate_tooltip_tribal:1 "Chance of success #R decreases#! with the @military_icon! skill of the [target.GetEmployer.GetAdjective] #Y Bodyguard#! (Current: [SCOPE.ScriptValue('get_master_of_guard_martial_svalue')|0Y])."
 #
 grant_holding:0 "Grant Holding"
 grant_holding_act:0 "Grant a holding to $CHAR$"
 grant_holding_past:0 "Granted a holding to $CHAR$"
 grant_holding_act_past:0 "$COUNTRY$ granted a Holding to $CHAR$"
 grant_holding_effect_tooltip:1 "The '[target.GetFamily.GetName|Y]' Family will be granted a Holding of our choice."
 grant_holding_select_title:0 "Select a Holding"
 #
 office_trial:0 "Bring to Trial"
 office_trial_act:0 "Attempt to imprison $CHAR$"
 office_trial_past:0 "Attempted to imprison $CHAR$, relieving them of office"
 office_trial_act_past:0 "$COUNTRY$ attempted to imprison $CHAR$, relieving them of office"
 office_trial_success_chance:1 "You currently have a [SCOPE.sChar('target').Custom('get_trial_success_chance_summary')] chance of success. (#Y [SCOPE.ScriptValue('get_trial_success_chance')|/0]%#!)"
 office_trial_success_chance_echain:0 "You currently have a [SCOPE.sChar('target').Custom('get_trial_success_chance_summary_echain')] chance of success. [SCOPE.ScriptValue('get_trial_success_chance')]"
 office_trial_success_can_improve:0 "Choices made during a trial will affect the ultimate chance.\n\n"
 chance_below_20:0 "#R very low#!"
 chance_20_40:0 "#R low#!"
 chance_40_60:0 "#Y standard#!"
 chance_60_80:0 "#G high#!"
 chance_above_80:0 "#G very high#!"
 chances_reduced_by:1 "Chance #R reduced#! by [SCOPE.sChar('target').GetHerHis] Power Base@power_base! (#R [SCOPE.ScriptValue('get_trial_powerbase')|/0]#!)"
 chances_increased_by:0 "Chance #G increased#! by [SCOPE.sChar('target').GetHerHis] Corruption @corruption_icon!(#G [SCOPE.ScriptValue('get_trial_corruption')|/0]#!)"
 easier_to_prosecute_tt:0 "No Right of Appeal: #Y [SCOPE.sChar('target').GetName]#! is not of our #Y Primary Culture#!, increasing the chances of conviction.\n\n"
 pick_influence_ambition:1 "Scheme: Influence"
 pick_influence_ambition_act:2 "$CHAR$ will begin garnering political influence"
 pick_influence_ambition_past:2 "$CHAR$ began garnering political influence."
 pick_influence_ambition_act_past:2 "$CHAR$ began garnering political influence"
 ##
 pick_influence_ambition_select_title:0 "$pick_influence_ambition$"
 auto_influence_toggle:0 "Toggle Automatic Influence"
 auto_influence_toggle_act:0 "$CHAR$ will automatically influence their own choice of target."
 auto_influence_toggle_past:0 "Allowed $CHAR$ to automatically influence their own choice of target."
 auto_influence_toggle_act_past:0 "Allowed $CHAR$ to automatically influence their own choice of target."
 influence_potential_rewards_tt:2 "[target.GetName] will lose #R -0.1#! Popularity @popularity_icon! each month"
 until_scheme_ends_tt:0 "Until the Scheme ends:"
 #
 scheme_ruler_invest_has_tt:0 "Has the Siphon Funds ambition active."
 scheme_ruler_invest_potential_rewards_tt:1 "[target.GetName] will gain #G 10#! @gold! and #R 0.05#! @corruption_icon! each month until the Scheme ends."
 ruler_invest_ambition:0 "Scheme: Siphon Funds"
 ruler_invest_ambition_act:1 "$CHAR$ will siphon funds from the national treasury to their own pocket"
 ruler_invest_ambition_past:1 "$CHAR$ siphoned funds from the national treasury"
 ruler_invest_ambition_act_past:1 "$CHAR$ started siphoning funds from the national treasury"
 #
 legitimacy_ambition_effect_tt:1 "[target.GetName] will lose #R -4#! @gold! each month until the Scheme ends, when [actor.GetName] will gain #Y 5#! Legitimacy @legitimacy!"
 legitimacy_bloodline_tt:0 "[target.GetPraenomen] may also gain a Greek #Y Bloodline#! trait"
 prove_legitimacy:1 "Scheme: Prove Legitimacy"
 prove_legitimacy_act:0 "$CHAR$ will begin delving into the ancestry of their bloodline"
 prove_legitimacy_act_past:0 "$CHAR$ began delving into the ancestry of their bloodline"
 prove_legitimacy_past:0 "$CHAR$ began delving into the ancestry of their bloodline"
 gain_random_diadochi_bloodline_trait:0 "Discover a connection to a Greek #Y Bloodline#!!"
 gained_diadochi_bloodline_trait:0 "[SCOPE.GetRootScope.GetCharacter.GetName] and has gained a #Y Bloodline#! trait."
 gained_diadochi_bloodline_trait_children:0 "[SCOPE.GetRootScope.GetCharacter.GetName] and [SCOPE.GetRootScope.GetCharacter.GetHerHis] progeny have gained a #Y Bloodline#! trait."
 hold_games_scheme:2 "Scheme: Sponsor Games"
 hold_games_scheme_act:1 "Sponsor Games"
 hold_games_scheme_past:1 "Sponsored Games"
 hold_games_scheme_act_past:1 "Sponsored Games"
 hold_games_scheme_ci_tooltip:3 "For the duration of this scheme [SCOPE.sChar('target').GetSheHe] will lose #R 5#! @gold! and gain #Y 0.5#! @popularity_icon! each month and a chosen Territory will receive #G +10%#! Local Population Happiness."
 recent_trial_cannot_tt:0 "@trigger_no! You cannot attempt a trial again until [SCOPE.sChar('target').GetVariableExpiry('recent_trial_cooldown_var')|Y]"
 #
 governor_grant_nickname:0 "Grant Regional Cognomen"
 governor_grant_nickname_act:0 "Grant a Cognomen"
 governor_grant_nickname_past:0 "Granted a Cognomen"
 governor_grant_nickname_act_past:0 "Granted a Cognomen"
 #
 impose_corruption_sanctions:1 "Impose Sanctions"
 impose_corruption_sanctions_act:0 "Impose corruption sanctions on $CHAR$"
 impose_corruption_sanctions_past:0 "Imposed corruption sanctions on $CHAR$"
 impose_corruption_sanctions_act_past:0 "Imposed Corruption Sanctions on $CHAR$"
 impose_corruption_sanctions_tt_1:0 "[target.GetName] loses [SCOPE.ScriptValue('impose_fine_corruption_svalue')|G0] Corruption @corruption_icon! and #R 20#! Loyalty@loyalty_icon!for #Y 60 months#!"
 impose_corruption_sanctions_tt_2:0 "[target.GetName] loses [SCOPE.ScriptValue('impose_fine_corruption_svalue')|G0] Corruption @corruption_icon!"
 #Marriage Events
 royal_marriage.6.t:0 "[ROOT.GetCountry.Custom('proposal_type')]"
 got_indecent_proposal:0 "An Unlikely Proposal"
 got_decent_proposal:0 "A Suitable Match"
 #First
 random_marriage_proposal_1:0 "Blustering with excitement, [SCOPE.sChar('suitor').GetPraenomen] summoned [SCOPE.sChar('suitor').GetHerHis] domestic aide. After far too long alone, [SCOPE.sChar('suitor').GetSheHe] decided to extend an offer of marriage to the [SCOPE.sChar('love_target').Custom('get_beautifulness')] [SCOPE.sChar('love_target').Custom('get_age_adjective')] [SCOPE.sChar('love_target').GetPraenomen], of the [SCOPE.sChar('love_target').GetFamilyDisplayAdjective] dynasty."
 random_marriage_proposal_2:0 "After careful deliberation, assessment of potential spouses, and a great deal of research into various bloodlines and heritages, [SCOPE.sChar('suitor').GetPraenomen] summoned [SCOPE.sChar('suitor').GetHerHis] aides, and issued an offer of marriage to [SCOPE.sChar('love_target').GetPraenomen] of the [SCOPE.sChar('love_target').GetFamilyDisplayAdjective] dynasty."
 random_marriage_proposal_3:0 "While [SCOPE.sChar('suitor').GetPraenomen] has enjoyed life immensely as a [SCOPE.sChar('suitor').GetWomanMan] of leisure, [SCOPE.sChar('suitor').GetSheHe] summoned an envoy this very morning to deliver a proposal of marriage to the [SCOPE.sChar('love_target').Custom('get_beautifulness')] [SCOPE.sChar('love_target').Custom('get_age_adjective')] [SCOPE.sChar('love_target').GetPraenomen], hoping to produce heirs to further legitimize the [SCOPE.sChar('suitor').GetFamilyDisplayAdjective] dynasty."
 #Second
 hof_disapproves_loyalty_desc:0 "\n\nUnfortunately, the envoy reports, the head of the [SCOPE.sChar('love_target').GetFamilyDisplayAdjective] dynasty, [SCOPE.sChar('negotiator').GetName], is a vocal critic of our rule, and has made it clear that [SCOPE.sChar('negotiator').GetSheHe] will not allow this union under any circumstances.\n\nWe suspect this may just be a keen negotiating position, although we will have to offer a great deal more than we had hoped, if we are to win the heart of the [SCOPE.sChar('love_target').Custom('get_beautifulness')] [SCOPE.sChar('love_target').GetPraenomen]."
 hof_disapproves_age_desc:0 "\n\nWith regret, our envoy brings news that the head of the house [SCOPE.sChar('love_target').GetFamilyDisplayAdjective], [SCOPE.sChar('negotiator').GetName], has stepped in to raise issues with this proposal, citing the great gap in age between [SCOPE.sChar('suitor').GetPraenomen] and the [SCOPE.sChar('love_target').Custom('get_age_adjective')], [SCOPE.sChar('love_target').GetPraenomen].\n\nClearly, [SCOPE.sChar('negotiator').GetSheHe] is merely attempting to get more out of us for the dowry... perhaps negotiation is the only way to win love for [SCOPE.sChar('suitor').GetPraenomen]."
 self_disapproves_loyalty_desc:0 "\n\nThe envoy who delivered the proposal, however, reports that he barely made it out alive after [SCOPE.sChar('love_target').GetPraenomen] flew into a great rage, hurling a [ROOT.GetCountry.Custom('get_arena_death_implement_glad')] with great accuracy, and nearly decapitating him. It seems that [SCOPE.sChar('love_target').GetPraenomen] considers our suggestions with great contempt. We may need to sweeten the deal by increasing the size of the dowry."
 self_disapproves_age_desc:0 "\n\nThe envoy reports that the proposal, whilst flattering, evoked a great deal of amusement from [SCOPE.sChar('love_target').GetPraenomen] and [SCOPE.sChar('love_target').GetHerHis] companions, who made no effort to conceal their contempt regarding the advanced age of [SCOPE.sChar('suitor').GetPraenomen].\n\nWe may have to consider yielding a sizable dowry if [SCOPE.sChar('suitor').GetPraenomen] is to find love at such a distant gap of age and experience."
 self_approves_desc:0 "\n\nThe envoy reports that the [SCOPE.sChar('love_target').Custom('get_age_adjective')] [SCOPE.sChar('love_target').GetPraenomen] almost swooned after receiving the news. It may be that [SCOPE.sChar('suitor').GetPraenomen] and [SCOPE.sChar('love_target').GetPraenomen] are an ideal match."
 hof_approves_desc:0 "\n\nDespite the appearance of [SCOPE.sChar('negotiator').GetPraenomen], head of the [SCOPE.sChar('negotiator').GetFamilyDisplayAdjective] family, it seems that all concerns were salved by the [SCOPE.sChar('suitor').Custom('love_object')] that [SCOPE.sChar('suitor').GetPraenomen] had offered up in support of [SCOPE.sChar('suitor').GetHerHis] proposal."
 ##get_age_adjective
 get_maiden_nn:0 "young maiden"
 get_master_nn:0 "young master"
 get_woman_nn:0 "young woman"
 get_man_nn:0 "young man"
 get_woman_of_age_nn:0 "older woman"
 get_gentleman_nn:0 "older gentleman"
 #get_beautifulness
 get_beautifulness_beautiful:0 "beautiful"
 get_beautifulness_pulchritudinous:0 "pulchritudinous"
 get_beautifulness_stunning:0 "stunning"
 get_beautifulness_fabulous:0 "fabulous"
 get_beautifulness_hideously_maimed:0 "hideously_maimed"
 get_beautifulness_leprous:0 "leprous"
 get_beautifulness_charmless:0 "charmless"
 get_beautifulness_pious:0 "pious"
 get_beautifulness_fair:0 "fair"
 get_beautifulness_charming:0 "charming"
 get_beautifulness_splendid:0 "splendid"
 get_beautifulness_attractive:0 "attractive"
 get_beautifulness_expert_martial:0 "brawny"
 #love_object
 got_poetry:0 "beautifully penned love-poetry"
 got_flowers:0 "gargantuan array of floral decorations"
 got_mournful_wailings:0 "mournful background wailings"
 got_splendid_gifts:0 "splendid gifts"
 got_fine_clothes:0 "fine clothes"
 got_wondrous_garments:0 "wondrous garments"
 got_offers_of_friendship:0 "promises of eternal fidelity"
 disloyalty_exclusive_marriage:0 "This option is #Y exclusive#! due to the disloyalty of the negotiating party."
 unable_to_propose_to_for_5_years:0 "You will be unable to select #Y [SCOPE.sChar('love_target').GetPraenomen]#! for Arrange Marriage for #Y 5#! years."
 royal_marriage.6.a:0 "Splendid! Let us arrange the festivities!"
 royal_marriage.6.b:0 "Cunning. We do have some gold to spare."
 royal_marriage.6.c:0 "A hard bargain, but worth every penny."
 royal_marriage.6.d:0 "We shall have to look elsewhere for love..."
 #Sell into slavery
 sell_into_slavery:0 "Sell into Slavery"
 sell_into_slavery_act:0 "Sell $CHAR$ into slavery"
 sell_into_slavery_act_past:0 "Sold $CHAR$ into slavery"
 sell_into_slavery_past:0 "Sold $CHAR$ into slavery"
 based_on_stats_slave:1 "[actor.GetName] gains [SCOPE.ScriptValue('sell_slavery_income')|2G] @gold! from skills of [target.GetPraenomen]"
 sold_every_family_member_tt:1 "Every other '[target.GetFamily.GetName|Y]' Family Member ([SCOPE.ScriptValue('sell_into_slavery_count_svalue')|Y0]) loses #R 10#! Loyalty@loyalty_icon!"
 sold_every_family_head_tt:0 "Every other '[target.GetFamily.GetName|Y]' Family Member ([SCOPE.ScriptValue('sell_into_slavery_count_svalue')|Y0]) loses #R 30#! Loyalty@loyalty_icon!for #Y 120 months#!"
 slavery_sell_tt:0 "[target.GetName] will #R disappear#! forever."
 dislikes_selling_family_slavery_tt:0 "Great Family shamed:"
 #Revoke Holding
 revoke_holding:0 "Revoke Holding"
 revoke_holding_past:0 "Revoked Holding"
 revoke_holding_act:1 "$CHAR$ will revoke a family holding"
 revoke_holding_act_past:0 "Revoked Holding"
 revoke_holding_effect_tooltip:0 "Revoke a Holding that does not have a Family Estate"
 revoke_holding_select_title:0 "Select Holding to Revoke:"
 #Orator Bribe
 orator_bribe_character:0 "Persuade"
 orator_bribe_character_past:0 "Character Persuaded!"
 orator_bribe_character_act:0 "Persuade $CHAR$ to become more loyal"
 orator_bribe_character_act_past:0 "$COUNTRY$ persuaded $CHAR$ to become far more loyal."
 orator_bribe_reason:0 "This replaces #Y Bribe#! as your ruler has the #Y Orator#! or #Y Silver Tongued#! traits.\n\n"
 #Ostracize
 ostracize_effect_tt:1 "[SCOPE.sChar('target').GetName|Y] will be banished to a random nearby country who will lose #R 25#! Opinion of us."
 ostracize_char:0 "Ostracize"
 ostracize_char_past:0 "Character Ostracized!"
 ostracize_char_act:0 "Ostracize $CHAR$"
 ostracize_char_act_past:0 "$COUNTRY$ ostracized $CHAR$!"
 due_to_half_power_base:0 "#R Tyranny Cost#! is equal to half the target's Power Base.\n\n"
 FROM_TYRANNY_PARTY_OSTRA:0 "Country: From Tyranny"
 ostracize_char_impact:0 "Ostracism"
 mg_ostra:0 "Rumors of Ostracism"
 mg_ostra_oops:0 "Ostracized Royalty"
 OSTRACISM_RECENTLY_HELD:1 "[SCOPE.sCountry('actor').GetName|Y] recently ostracized a character, and can not ostracize another until [SCOPE.sCountry('actor').GetVariableExpiry('ostracism_recently_held')|Y].\n"
 ostracize_tt:0 "[actor.GetName] loses #R 5#! Stability @stability! and [SCOPE.ScriptValue('ostracize_tyranny_svalue')|R0] Tyranny @tyranny!"
 #MG SYRACUSE
 mg_syracuse_merc_recruit:0 "Elect New Leader"
 mg_syracuse_merc_recruit_past:0 "Elected New Leader"
 mg_syracuse_merc_recruit_act:0 "Elect $CHAR$ as new leader"
 mg_syracuse_merc_recruit_act_past:0 "Elected New Leader"
 must_have_adjacent_disloyal_state:0 "At least one Province ruled by this governor, and adjacent to our border, must have less than #Y 50#! Province Loyalty."
 #Spouse Finder
 marriage_internal_scheme_tt:1 "[target.GetName] is not already trying to arrange a political marriage."
 seek_spouse_interaction:1 "Scheme: Seek Spouse"
 seek_spouse_interaction_act:1 "Marry $CHAR$ into a Great Family"
 seek_spouse_interaction_past:0 "Arranged Political Marriage"
 seek_spouse_interaction_act_past:0 "Arranged Political Marriage"
 marriage_internal_unmarried_tt:0 "[target.GetName] must be unmarried."
 scheme_seek_a_spouse_tooltip:3 "A suitable spouse for [target.GetName] will be found from the extended relations of a chosen #Y Family#!. Their #Y Family Head#! may have demands or #R reject#! the request.\n[target.GetName] will lose #R -2.5#! @gold! each month until the Scheme ends."
 seek_spouse_interaction_select_title:0 "Select Head of Family to Approach:"
 scheme.21.t:0 "A New Political Marriage?"
 not_state_culture:0 "[target.GetName] is not of our #Y Primary Culture#!.\nTo adopt [target.GetHerHim] we need to enact the #Y Ease Restrictions on Citizenship#! cultural decision for the [target.GetEmployer.GetPrimaryCulture.GetName] culture."
 BRIBE_RULERWEALTH_TT:0 "[SCOPE.sCountry('actor').GetRuler.GetName|Y] must have #Y 100#! @gold! in [SCOPE.sCountry('actor').GetRuler.GetHerHis] personal coffers."
 PROVE_LEGITIMACY_RULERWEALTH_TT:0 "[SCOPE.sCountry('actor').GetRuler.GetName|Y] must have #Y 300#! @gold! in [SCOPE.sCountry('actor').GetRuler.GetHerHis] personal coffers."
 SEEK_TREATMENT_RULERWEALTH_TT:0 "[SCOPE.sCountry('actor').GetRuler.GetName|Y] must have #Y 200#! @gold! in [SCOPE.sCountry('actor').GetRuler.GetHerHis] personal coffers."
 GOVERNOR_OR_LEGION_COMMANDER_TT:0 "[target.GetName] is a [legate|E] or [governor|E]."
#Snakefolk Spouse Finder
 marriage_internal_scheme_tt:1 "[target.GetName] is not already trying to arrange a political marriage."
 snakefolk_seek_spouse_interaction:1 "Scheme: Seek Spouse"
 snakefolk_seek_spouse_interaction_act:1 "Marry $CHAR$ into a Great Family"
 snakefolk_seek_spouse_interaction_past:0 "Arranged Political Marriage"
 snakefolk_seek_spouse_interaction_act_past:0 "Arranged Political Marriage"
 marriage_internal_unmarried_tt:0 "[target.GetName] must be unmarried."
 scheme_seek_a_spouse_tooltip:3 "A suitable spouse for [target.GetName] will be found from the extended relations of a chosen #Y Family#!. Their #Y Family Head#! may have demands or #R reject#! the request.\n[target.GetName] will lose #R -2.5#! @gold! each month until the Scheme ends."
 snakefolk_seek_spouse_interaction_select_title:0 "Select Head of Family to Approach:"
 scheme.21.t:0 "A New Political Marriage?"
 not_state_culture:0 "[target.GetName] is not of our #Y Primary Culture#!.\nTo adopt [target.GetHerHim] we need to enact the #Y Ease Restrictions on Citizenship#! cultural decision for the [target.GetEmployer.GetPrimaryCulture.GetName] culture."
 BRIBE_RULERWEALTH_TT:0 "[SCOPE.sCountry('actor').GetRuler.GetName|Y] must have #Y 100#! @gold! in [SCOPE.sCountry('actor').GetRuler.GetHerHis] personal coffers."
 PROVE_LEGITIMACY_RULERWEALTH_TT:0 "[SCOPE.sCountry('actor').GetRuler.GetName|Y] must have #Y 300#! @gold! in [SCOPE.sCountry('actor').GetRuler.GetHerHis] personal coffers."
 SEEK_TREATMENT_RULERWEALTH_TT:0 "[SCOPE.sCountry('actor').GetRuler.GetName|Y] must have #Y 200#! @gold! in [SCOPE.sCountry('actor').GetRuler.GetHerHis] personal coffers."
 GOVERNOR_OR_LEGION_COMMANDER_TT:0 "[target.GetName] is a [legate|E] or [governor|E]."
 #Sneaky Deeds
 char_espionage:0 "Attempt Espionage"
 char_espionage_act:0 "Send $CHAR$ to attempt to gain access to detailed information on a target country"
 char_espionage_past:0 "Sent $CHAR$ on an espionage mission."
 char_espionage_act_past:0 "Sent $CHAR$ on an espionage mission."
 char_espionage_select_title:0 "Select Espionage Target"
 #Sneaky Deeds 2: The Sneakening
 char_espionage_return:0 "Recall From Espionage"
 char_espionage_return_act:0 "Recall $CHAR$ from their espionage duties"
 char_espionage_return_past:0 "Recalled $CHAR$ from espionage duties"
 char_espionage_return_act_past:0 "Recalled $CHAR$ from espionage duties"

 get_ambition_blank:0 ""
 get_ambition_old:0 "abandon '[ROOT.GetCharacter.GetAmbitionName|Y]' and "
 
 #Successor support
 loyalty_pretender_support_ci:0 "Foreign Support for Claimant"
 pretender_support_ci_tt:0 "If this pretender becomes involved in a Civil War, we will be asked to contribute to their struggle."
 warfare.12.t:0 "Pretender Sparks War"
 warfare.12.desc:0 "[SCOPE.sChar('supported_target').GetName], a claimant to the [SCOPE.sChar('supported_target').GetEmployer.GetAdjective] throne whom we have been funneling covert funds to, has sparked a war for the throne.\n\nThe beleaguered revolt has sent requests for aid to our envoys, hoping that we might further advance their cause."
 warfare.12.a:0 "Send them soldiers."
 warfare.12.b:0 "Direct intervention seems prudent."
 warfare.12.c:0 "More aid? Alas..."
 SHOW_THEIR_CHARACTERS:0 "#T Show Characters in Country#!"
 support_successor:0 "Support Pretender"
 support_successor_act:0 "Send financial aid to a foreign pretender"
 support_successor_past:0 "Sent financial aid to $CHAR$"
 support_successor_act_past:0 "Sent financial aid to $CHAR$"
 PRETENDER_TOOLTIP:0 "This character is a pretender to the throne!"
 RESET_CVIEW:0 "Reset characters view to show our characters."
 warfare.12.d:0 "Our constancy shall surely be rewarded."
 if_small_enough_subject_tt:0 "#G If their nation survives the civil war and is of a lower rank than us, they may become our subject#!"
 warfare.14.t:0 "A Kingdom Restored"
 warfare.14.desc:0 "The grateful [SCOPE.sC('puppet_kingdom').GetAdjective] Kingdom how lies in safe hands under the rule of [SCOPE.sC('puppet_kingdom').GetRuler.GetName].\n\nGrateful for our aid, and weary of war, their envoys send platitudes of gold and riches, hoping that we might take our leave. With their lands in flames, they would be hard-pressed to refuse more aggressive overtures, however..."
 warfare.14.a:0 "You shall serve us now, [SCOPE.sC('puppet_kingdom').GetRuler.GetPraenomen]."
 warfare.14.b:0 "Let them be."
 warfare.15.t:0 "A Kingdom Divided"
 warfare.15.desc:0 "At long last, the [SCOPE.sC('puppet_kingdom').GetAdjective] civil war has been won. Despite our diplomatic wrangling, their ungrateful ruler has insisted on the immediate withdrawal of our men from their lands.\n\nTo sweeten the deal, they insist on a share of the riches from the protracted conquest."
 warfare.15.b:0 "Well, it's better than nothing."
