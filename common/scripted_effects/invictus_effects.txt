##Bloodline legitimacy scheme effect.
add_bloodline_effect = {
	add_trait = $BLOODLINE$
	if = {
		limit = {
			num_of_children > 0
		}
		every_child = {
			limit = { is_alive = yes }
			add_trait = $BLOODLINE$
			if = {
				limit = { num_of_children > 0 }
				every_child = {
					limit = { is_alive = yes }
					add_trait = $BLOODLINE$
				}
			}
		}
	}
}

mission_claim_region_effect = {
	if = {
		limit = {
			region:$REGION$ = {
				any_region_province = {
					NOT = { owned_or_subject_owned = root }
				}
			}
		}
		random_province = {
			limit = { is_in_region = $REGION$ }
			custom_tooltip = mission_claim_region_tooltip
		}
		region:$REGION$ = {
			hidden_effect = {
				every_region_province = {
					limit = {
						NOT = { owned_or_subject_owned = root }
					}
					add_claim = root
				}
			}
		}
	}
}

found_city_effect = {
	set_city_status = city
	hidden_effect = {
		every_neighbor_province = {
			limit = {
				NOR = {
					is_sea = yes
					terrain = riverine_terrain
					has_city_status = yes	
				}
			}
			add_neighbor_city_modifier_effect = yes
		}
	}
	#while = {
	#	count = 3
	#	random_pops_in_province = {
	#		limit = {
	#			OR = {
	#				pop_type = tribesmen
	#				pop_type = freemen
	#			}
	#		}
	#		set_pop_type = citizen
	#	}
	#}
}
destroy_city_effect = {
	set_city_status = settlement
	hidden_effect = {
		every_neighbor_province = {
			limit = {
				NOR = {
					is_sea = yes
					terrain = riverine_terrain
					has_city_status = yes	
				}
			}
			add_neighbor_city_modifier_effect = yes
		}
	}
	#every_pops_in_province = {
	#	limit = {
	#		pop_type = citizen
	#	}
	#	set_pop_type = freemen
	#}
}
add_neighbor_city_modifier_effect = { #Province scope
	if = {
		limit = {
			is_uninhabitable = no
		}
		if = {
			limit = { has_province_modifier = neighbor_city }
			remove_province_modifier = neighbor_city
		}
		while = {
			count = neighbor_cities_svalue

			add_permanent_province_modifier = {
				name = neighbor_city
				mode = add
			}
		}
	}
}

tribal_duel_description_distribution = {	#Makes it so no description shows up twice in a row
	switch = {
		trigger = has_variable 

		axe_combat = {
			if = {
				limit = {
					NOT = { has_variable = generic_desc_giver }
				}
				set_variable = {	#I do this to make sure the 1st and 3rd descriptions are never the same.
					name = generic_desc_giver
					value = { integer_range = { min = 1 max = 7 } }	#7 possible generic descriptions change this to add more.
				}
			}
			else = {
				limit = { has_variable = generic_desc_giver }
				remove_variable = generic_desc_giver
				if = {
					limit = { var:axe_combat = 1 }
					random_list = {
						50 = {
							change_variable = {
								name = axe_combat
								add = 1
							}
						}
						50 = {
							change_variable = {
								name = axe_combat
								add = 2
							}
						}
					}
				}
				else_if = {
					limit = { var:axe_combat = 2 }
					random_list = {
						50 = {
							change_variable = {
								name = axe_combat
								add = 1
							}
						}
						50 = {
							change_variable = {
								name = axe_combat
								subtract = 1
							}
						}
					}
				}
				else = {
					limit = { var:axe_combat = 3 }
					random_list = {
						50 = {
							change_variable = {
								name = axe_combat
								subtract = 1
							}
						}
						50 = {
							change_variable = {
								name = axe_combat
								subtract = 2
							}
						}
					}				
				}
			}
		}
		spear_combat = {
			if = {
				limit = {
					NOT = { has_variable = generic_desc_giver }
				}
				set_variable = {	#I do this to make sure the 1st and 3rd descriptions are never the same.
					name = generic_desc_giver
					value = { integer_range = { min = 1 max = 5 } }	#5 possible generic descriptions change this to add more.
					days = 365
				}
			}
			else = {
				limit = { has_variable = generic_desc_giver }
				remove_variable = generic_desc_giver
				if = {
					limit = { var:spear_combat = 1 }
					random_list = {
						50 = {
							change_variable = {
								name = spear_combat
								add = 1
							}
						}
						50 = {
							change_variable = {
								name = spear_combat
								add = 2
							}
						}
					}
				}
				else_if = {
					limit = { var:spear_combat = 2 }
					random_list = {
						50 = {
							change_variable = {
								name = spear_combat
								add = 1
							}
						}
						50 = {
							change_variable = {
								name = spear_combat
								subtract = 1
							}
						}
					}
				}
				else = {
					limit = { var:spear_combat = 3 }
					random_list = {
						50 = {
							change_variable = {
								name = spear_combat
								subtract = 1
							}
						}
						50 = {
							change_variable = {
								name = spear_combat
								subtract = 2
							}
						}
					}				
				}
			}
		}
		horse_combat = {
			if = {
				limit = {
					NOT = { has_variable = generic_desc_giver }
				}
				set_variable = {	#I do this to make sure the 1st and 3rd descriptions are never the same.
					name = generic_desc_giver
					value = { integer_range = { min = 1 max = 5 } }	#5 possible generic descriptions change this to add more.
					days = 365
				}
			}
			else = {
				limit = { has_variable = generic_desc_giver }
				remove_variable = generic_desc_giver
				if = {
					limit = { var:horse_combat = 1 }
					random_list = {
						50 = {
							change_variable = {
								name = horse_combat
								add = 1
							}
						}
						50 = {
							change_variable = {
								name = horse_combat
								add = 2
							}
						}
					}
				}
				else_if = {
					limit = { var:horse_combat = 2 }
					random_list = {
						50 = {
							change_variable = {
								name = horse_combat
								add = 1
							}
						}
						50 = {
							change_variable = {
								name = horse_combat
								subtract = 1
							}
						}
					}
				}
				else = {
					limit = { var:horse_combat = 3 }
					random_list = {
						50 = {
							change_variable = {
								name = horse_combat
								subtract = 1
							}
						}
						50 = {
							change_variable = {
								name = horse_combat
								subtract = 2
							}
						}
					}				
				}
			}
		}
		hands_combat = {
			if = {
				limit = {
					NOT = { has_variable = generic_desc_giver }
				}
				set_variable = {	#I do this to make sure the 1st and 3rd descriptions are never the same.
					name = generic_desc_giver
					value = { integer_range = { min = 1 max = 5 } }	#5 possible generic descriptions change this to add more.
					days = 365
				}
			}
			else = {
				limit = { has_variable = generic_desc_giver }
				remove_variable = generic_desc_giver
				if = {
					limit = { var:hands_combat = 1 }
					random_list = {
						50 = {
							change_variable = {
								name = hands_combat
								add = 1
							}
						}
						50 = {
							change_variable = {
								name = hands_combat
								add = 2
							}
						}
					}
				}
				else_if = {
					limit = { var:hands_combat = 2 }
					random_list = {
						50 = {
							change_variable = {
								name = hands_combat
								add = 1
							}
						}
						50 = {
							change_variable = {
								name = hands_combat
								subtract = 1
							}
						}
					}
				}
				else = {
					limit = { var:hands_combat = 3 }
					random_list = {
						50 = {
							change_variable = {
								name = hands_combat
								subtract = 1
							}
						}
						50 = {
							change_variable = {
								name = hands_combat
								subtract = 2
							}
						}
					}				
				}
			}
		}
		sword_combat = {
			if = {
				limit = {
					NOT = { has_variable = generic_desc_giver }
				}
				set_variable = {	#I do this to make sure the 1st and 3rd descriptions are never the same.
					name = generic_desc_giver
					value = { integer_range = { min = 1 max = 5 } }	#5 possible generic descriptions change this to add more.
					days = 365
				}
			}
			else = {
				limit = { has_variable = generic_desc_giver }
				remove_variable = generic_desc_giver
				if = {
					limit = { var:sword_combat = 1 }
					random_list = {
						50 = {
							change_variable = {
								name = sword_combat
								add = 1
							}
						}
						50 = {
							change_variable = {
								name = sword_combat
								add = 2
							}
						}
					}
				}
				else_if = {
					limit = { var:sword_combat = 2 }
					random_list = {
						50 = {
							change_variable = {
								name = sword_combat
								add = 1
							}
						}
						50 = {
							change_variable = {
								name = sword_combat
								subtract = 1
							}
						}
					}
				}
				else = {
					limit = { var:sword_combat = 3 }
					random_list = {
						50 = {
							change_variable = {
								name = sword_combat
								subtract = 1
							}
						}
						50 = {
							change_variable = {
								name = sword_combat
								subtract = 2
							}
						}
					}				
				}
			}
		}
	}
}
tribal_duel_rewards_effect = {
	if = {
		limit = {
			has_variable = random_effects_1
		}
		if = {
			limit = {
				scope:fighter_of_duel = {
					has_nickname = no
				}
			}
			scope:fighter_of_duel = {
				add_nickname = THE_FIGHTER
				add_popularity = 10
			}
		}
		else = {
			scope:fighter_of_duel = {
				add_popularity = 10
			}
		}
	}
	if = {
		limit = {
			has_variable = random_effects_2
		}
		if = {
			limit = {
				scope:fighter_of_duel = {
					has_nickname = no
				}
			}
			scope:fighter_of_duel = {
				add_nickname = THE_CHAMPION
				add_martial = 1
				employer = {
					add_stability = 5
				}
			}
		}
		else = {
			scope:fighter_of_duel = {
				add_martial = 1
				employer = {
					add_stability = 5
				}
			}
		}
	}
	if = {
		limit = {
			has_variable = random_effects_3
		}
		if = {
			limit = {
				scope:fighter_of_duel = {
					has_nickname = no
				}
				scope:target = {
					is_alive = no
				}
			}
			scope:fighter_of_duel = {
				add_nickname = THE_SLAYER
				add_character_modifier = {
					name = renowned_fighter
					duration = 3650
				}
			}
		}
		else = {
			scope:fighter_of_duel = {
				add_character_modifier = {
					name = renowned_fighter
					duration = 3650
				}
			}
		}
	}
	if = {
		limit = {
			has_variable = random_effects_4
		}
		if = {
			limit = {
				scope:fighter_of_duel = {
					has_nickname = no
				}
			}
			scope:fighter_of_duel = {
				add_nickname = THE_STRONG
				add_martial = 1
				add_finesse = 1
			}
		}
		else = {
			scope:fighter_of_duel = {
				add_martial = 1
				add_finesse = 1
			}
		}
	}
	if = {
		limit = {
			has_variable = random_effects_5
		}
		if = {
			limit = {
				scope:fighter_of_duel = {
					has_nickname = no
				}
				scope:target = {
					is_alive = no
				}
			}
			scope:fighter_of_duel = {
				add_nickname = THE_TAKER_OF_SOULS
				add_popularity = 5
				add_character_modifier = {
					name = renowned_fighter
					duration = 3650
				}					
				family = {
					add_prestige = 100
				}
			}
		}
		else = {
			scope:fighter_of_duel = {
				add_popularity = 5
				add_character_modifier = {
					name = renowned_fighter
					duration = 3650
				}					
				family = {
					add_prestige = 100
				}
			}
		}
	}
}

spread_religion_in_province = {
	# Convert 12.5% - 25% of a provinces pops to $RELIGION$
	# Needs a new tooltip for each religion used.
	save_scope_as = province_name
	custom_tooltip = spread_$RELIGION$_in_province_tt
	hidden_effect = {
		ordered_pops_in_province = {
			limit = {
				NOT = { pop_religion = $RELIGION$ }
			}
			max = {
				scope:province_name = {
					every_pops_in_province = {
						add = 1
					}
				}
				divide =  {
					integer_range = {
						max = 8
						min = 4
					}
				}
			}
			set_pop_religion = $RELIGION$
		}
	}
}