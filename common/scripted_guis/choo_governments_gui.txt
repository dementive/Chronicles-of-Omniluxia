#rise prince guard
rise_prince_guard = {
    scope = country
	saved_scopes = {
		
	}
    is_shown = { # Can be omitted as always true
		is_tribal = yes
		NOT = { government = nomadic_tribe  }
    }
	ai_is_valid = {
		
	}
    is_valid = {
		has_law = tribal_prince_guardy
		#can_pay_price = recruit_prince_guardy_host
		root.capital_scope = {
			controller = root
		}
		custom_tooltip = {

			text = not_over_the_guardy_limit
			calc_all_heavy_cavalry < maximum_prince_retunie_size

		}

    }
    effect = {
		#pay_price = recruit_prince_guardy_host

		if = {
			limit = { 
				capital_scope.governorship = {

					has_legion_trigger = no

				}
				NOT = {  

					any_army = {

						legion = ROOT.capital_scope.governorship.legion

					}
							
				}  
			}
			
			capital_scope.governorship = {
				raise_legion = {
					name = "The Prince Guardy"
					create_unit = {
						name = "The Prince Guardy"
						sub_unit = heavy_cavalry
						save_scope_as = prince_guardy_army
						while = {
							count = inverse_increase_of_retunie_size_increment
							add_subunit = heavy_cavalry
						}
						set_as_commander = root.current_ruler
					}
				}
	
			}

		
		}
		else_if = {
			limit = {
				capital_scope.governorship = {

					has_legion_trigger = yes

				}
				
				NOT = {
				any_army = {  
				 	
				 		legion = ROOT.capital_scope.governorship.legion
				 	}
				 }

			}
			create_unit = {
				name = "The Prince Guardy"
				sub_unit = heavy_cavalry
				save_scope_as = prince_guardy_army
				while = {
					count = inverse_increase_of_retunie_size_increment
					add_subunit = heavy_cavalry
				}
				set_as_commander = root.current_ruler
				
			}
			random_legion = {
				limit = { legion = ROOT.capital_scope.governorship.legion }
				
				add_legion_unit = scope:prince_guardy_army

			}

		}
		else = {
			random_army = {
				limit = {
					has_legion_trigger = yes
					legion = ROOT.capital_scope.governorship.legion
				}
				
				while = {
					count = inverse_increase_of_retunie_size_increment
					add_subunit = heavy_cavalry
				}
			}

		}

		




		
    }
}


#rise nomadic host

rise_nomadic_host = {
    scope = country
	saved_scopes = {
		
	}
    is_shown = { # Can be omitted as always true
		is_tribal = yes
		government = nomadic_tribe 
    }
	ai_is_valid = {
		
	}
    is_valid = {
		has_law = tribal_prince_guardy
		#can_pay_price = recruit_prince_guardy_host
		root.capital_scope = {
			controller = root
		}
		custom_tooltip = {

			text = not_over_the_host_limit
			calc_all_heavy_cavalry < maximum_prince_retunie_size

		}

    }
    effect = {
		#pay_price = recruit_prince_guardy_host

		if = {
			limit = { 
				capital_scope.governorship = {

					has_legion_trigger = no

				}
				NOT = {  

					any_army = {

						legion = ROOT.capital_scope.governorship.legion

					}
							
				}  
			}
			
			capital_scope.governorship = {
				raise_legion = {
					name = "Khan Raiders"
					create_unit = {
						name = "Khan Raiders"
						sub_unit = horse_archers
						save_scope_as = nomad_host_army
						while = {
							count = inverse_increase_of_retunie_size_increment
							add_subunit = horse_archers
						}
						set_as_commander = root.current_ruler
					}
				}
	
			}

		
		}
		else_if = {
			limit = {
				capital_scope.governorship = {

					has_legion_trigger = yes

				}
				
				NOT = {
				any_army = {  
				 	
				 		legion = ROOT.capital_scope.governorship.legion
				 	}
				 }

			}
			create_unit = {
				name = "Khan Raiders"
				sub_unit = horse_archers
				save_scope_as = nomad_host_army
				while = {
					count = inverse_increase_of_retunie_size_increment
					add_subunit = horse_archers
				}
				set_as_commander = root.current_ruler
				
			}
			random_legion = {
				limit = { legion = ROOT.capital_scope.governorship.legion }
				
				add_legion_unit = scope:nomad_host_army

			}

		}
		else = {
			random_army = {
				limit = {
					has_legion_trigger = yes
					legion = ROOT.capital_scope.governorship.legion
				}
				
				while = {
					count = inverse_increase_of_retunie_size_increment
					add_subunit = horse_archers
				}
			}

		}

		




		
    }
}


#rise knights banner

rise_knights_host = {
    scope = country
	saved_scopes = {
		
	}
    is_shown = { # Can be omitted as always true
		is_monarchy = yes
    }
	ai_is_valid = {
		
	}
    is_valid = {
		#has_law = 
		#can_pay_price = recruit_prince_guardy_host
		root.capital_scope = {
			controller = root
		}
		custom_tooltip = {

			text = not_over_the_guardy_limit
			calc_all_heavy_cavalry < maximum_prince_retunie_size

		}

    }
    effect = {
		#pay_price = recruit_prince_guardy_host

		if = {
			limit = { 
				capital_scope.governorship = {

					has_legion_trigger = no

				}
				NOT = {  

					any_army = {

						legion = ROOT.capital_scope.governorship.legion

					}
							
				}  
			}
			
			capital_scope.governorship = {
				raise_legion = {
					name = "Royal Banner"
					create_unit = {
						name = "The First Among All"
						sub_unit = knights
						save_scope_as = knights_host
						while = {
							count = inverse_increase_of_retunie_size_increment
							add_subunit = knights
						}
					}
				}
	
			}

		
		}
		else_if = {
			limit = {
				capital_scope.governorship = {

					has_legion_trigger = yes

				}
				
				NOT = {
				any_army = {  
				 	
				 		legion = ROOT.capital_scope.governorship.legion
				 	}
				 }

			}
			create_unit = {
				name = "The First Among All"
				sub_unit = knights
				save_scope_as = knights_host
				while = {
					count = inverse_increase_of_retunie_size_increment
					add_subunit = knights
				}				
			}
			random_legion = {
				limit = { legion = ROOT.capital_scope.governorship.legion }
				
				add_legion_unit = scope:knights_host

			}

		}
		else = {
			random_army = {
				limit = {
					has_legion_trigger = yes
					legion = ROOT.capital_scope.governorship.legion
				}
				
				while = {
					count = inverse_increase_of_retunie_size_increment
					add_subunit = knights
				}
			}

		}

    }
}